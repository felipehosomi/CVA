; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
AppName=SAP AddOn Control
AppVerName=SAP AddOn Control 1.0.0.16
AppPublisher=CVA Consultoria
AppPublisherURL=http://www.cvaconsultoria.com.br
AppSupportURL=http://www.cvaconsultoria.com.br
AppUpdatesURL=http://www.cvaconsultoria.com.br
DefaultDirName={code:GetDefaultAddOnDir}
DisableDirPage=true
Compression=lzma
SolidCompression=true
UsePreviousAppDir=false
AppendDefaultDirName=true
OutputDir=.\

[Files]
;Bibliotecas
Source: ..\CVA.AddOn.Control\bin\Debug\CVA.AddOn.Control.exe; Flags: ignoreversion; DestDir: {app}
Source: ..\CVA.AddOn.Control\bin\Debug\*.dll; DestDir: {app}; Flags: ignoreversion
Source: C:\Program Files (x86)\SAP\SAP Business One\AddOnInstallAPI.dll; Flags: dontcopy

[Code]

const
  ADDON_ID   = 'ControlSapAddOn';
  PARTNER_ID = 'CVA';

// Funções externas (AddOnInstallAPI.dll)
function SetAddOnFolder(path: string): integer; external 'SetAddOnFolder@AddOnInstallAPI.dll stdcall setuponly';
function EndInstallEx(path: string; succeed: boolean): integer; external 'EndInstallEx@AddOnInstallAPI.dll stdcall setuponly';
function EndUninstall(path: string; succeed: boolean): integer; external 'EndUninstall@AddOnInstallAPI.dll stdcall uninstallonly';

function GetDLLPath(IsUninstalling: boolean): string;
var ValueName: string;
begin

  if IsUninstalling then begin
    RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\' + PARTNER_ID + '\' + ADDON_ID, 'DLLInstallDir', ValueName);
    Result := ValueName;
  end
  else
    Result := Copy(ParamStr(6), Pos('|', ParamStr(6))+1, Length(ParamStr(6))-Pos('|', ParamStr(6)));

end;

function GetDefaultAddOnDir(param: String): string;
begin
  Result := Copy(ParamStr(6), 1, Pos('|', ParamStr(6))-1);
end;

// Grava no Registro a chave que identifica onde o add-on foi instalado
procedure RegisterAddOnInfo();
begin
  RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\' + PARTNER_ID + '\' + ADDON_ID, 'InstallDir', ExpandConstant('{app}'));
  RegWriteStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\' + PARTNER_ID + '\' + ADDON_ID, 'DLLInstallDir', GetDLLPath(false));
end;

procedure UnregisterAddOnInfo();
begin
  RegDeleteValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\' + PARTNER_ID + '\' + ADDON_ID, 'InstallDir');
  RegDeleteValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\' + PARTNER_ID + '\' + ADDON_ID, 'DLLInstallDir');
  RegDeleteKeyIfEmpty(HKEY_LOCAL_MACHINE, 'SOFTWARE\' + PARTNER_ID + '\' + ADDON_ID);
end;


function GetAddOnInstalledPath(): string;
var ValueName: string;
begin
  RegQueryStringValue(HKEY_LOCAL_MACHINE, 'SOFTWARE\' + PARTNER_ID + '\' + ADDON_ID, 'InstallDir', ValueName);
  Result := ValueName;
end;



//*******************************************************************************************************
//  InitializeSetup (função interna do Inno)
//  Executada sempre que a instalação/desinstalação inicia
//*******************************************************************************************************
function InitializeSetup(): boolean;
var ResultCode: integer;
begin

  // Está desinstalando...
  if ParamStr(6) = '/u' then begin
    SetCurrentDir(GetDLLPath(true));
    Exec(GetAddOnInstalledPath + '\unins000.exe', '', '', SW_SHOW, ewWaitUntilTerminated, ResultCode)
    Result := false;
  end

  // Está na instalação...
  else begin

    // A instalação tentou ser executada fora do SBOne?
    if Pos('|', ParamStr(6)) = 0 then begin
      MsgBox('A instalação deve ser executada apartir do SAP Business One.', mbInformation, MB_OK);
      Result := false;
    end

    // Ok, instalando de dentro do SBOne...
    else begin

      // Muda para o diretório onde o SBOne indicou estar a DLL AddOnInstallAPI.dll, para não dar "pau"
      // nas funções que utilizam ela
      SetCurrentDir(GetDLLPath(false));

      Result := true;

    end;

  end;

end;

//*******************************************************************************************************
//  CurStepChanged (função interna do Inno)
//
//*******************************************************************************************************
procedure CurStepChanged(CurStep: TSetupStep);
begin

  // Ao terminar a instalação com sucesso informa ao SB1 o diretório
  // de instalação e dá o sinal de que a instalação terminou
  if CurStep = ssPostInstall then begin
    RegisterAddOnInfo(); // grava a chave de instalação do add-on no Registro
    SetAddOnFolder(ExpandConstant('{app}'));
    EndInstallEx(ExpandConstant('{app}'), true);
    //UnloadDLL('c:\AddOnInstallAPI.dll');
  end;

end;

procedure DeinitializeSetup();
begin
    EndInstallEx('', false);
    UnloadDLL('c:\AddOnInstallAPI.dll');  // instalação cancelada
end;

//*******************************************************************************************************
//  CurUninstallStepChanged (função interna do Inno)
//
//*******************************************************************************************************
procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin

  // Ao terminar a desinstalação com sucesso avisa ao SB1
  if CurUninstallStep = usPostUninstall then begin
    UnregisterAddOnInfo(); // Remove do Registro a pasta de instalação do add-on
    EndUninstall(ExpandConstant('{app}'), true);
    //UnloadDLL('c:\AddOnInstallAPI.dll');
  end;

end;

procedure DeinitializeUninstall();
begin
  //EndUnInstall('', false);
  UnloadDLL('c:\AddOnInstallAPI.dll');
end;






[Languages]
Name: Portugues; MessagesFile: compiler:Languages\PortugueseStd.isl
[LangOptions]
LanguageName=Portuguese
LanguageID=$0416
[_ISTool]
UseAbsolutePaths=false
