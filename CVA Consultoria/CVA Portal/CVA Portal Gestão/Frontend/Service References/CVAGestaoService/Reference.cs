//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CVAGestaoLayout.CVAGestaoService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.ILogin")]
    public interface ILogin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/LogIn", ReplyAction="http://tempuri.org/ILogin/LogInResponse")]
        MODEL.Classes.UserModel LogIn(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/LogIn", ReplyAction="http://tempuri.org/ILogin/LogInResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.UserModel> LogInAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/LogOff", ReplyAction="http://tempuri.org/ILogin/LogOffResponse")]
        MODEL.Classes.MessageModel LogOff(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/LogOff", ReplyAction="http://tempuri.org/ILogin/LogOffResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> LogOffAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/FirstAccess", ReplyAction="http://tempuri.org/ILogin/FirstAccessResponse")]
        MODEL.Classes.UserModel FirstAccess(MODEL.Classes.UserModel user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogin/FirstAccess", ReplyAction="http://tempuri.org/ILogin/FirstAccessResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.UserModel> FirstAccessAsync(MODEL.Classes.UserModel user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginChannel : CVAGestaoLayout.CVAGestaoService.ILogin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.ILogin>, CVAGestaoLayout.CVAGestaoService.ILogin {
        
        public LoginClient() {
        }
        
        public LoginClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.UserModel LogIn(string email, string password) {
            return base.Channel.LogIn(email, password);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.UserModel> LogInAsync(string email, string password) {
            return base.Channel.LogInAsync(email, password);
        }
        
        public MODEL.Classes.MessageModel LogOff(int userId) {
            return base.Channel.LogOff(userId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> LogOffAsync(int userId) {
            return base.Channel.LogOffAsync(userId);
        }
        
        public MODEL.Classes.UserModel FirstAccess(MODEL.Classes.UserModel user) {
            return base.Channel.FirstAccess(user);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.UserModel> FirstAccessAsync(MODEL.Classes.UserModel user) {
            return base.Channel.FirstAccessAsync(user);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.ICalendar")]
    public interface ICalendar {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/SaveCalendarHeader", ReplyAction="http://tempuri.org/ICalendar/SaveCalendarHeaderResponse")]
        MODEL.Classes.MessageModel SaveCalendarHeader(MODEL.Classes.CalendarModel calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/SaveCalendarHeader", ReplyAction="http://tempuri.org/ICalendar/SaveCalendarHeaderResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveCalendarHeaderAsync(MODEL.Classes.CalendarModel calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/GetCalendar", ReplyAction="http://tempuri.org/ICalendar/GetCalendarResponse")]
        MODEL.Classes.CalendarModel[] GetCalendar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/GetCalendar", ReplyAction="http://tempuri.org/ICalendar/GetCalendarResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CalendarModel[]> GetCalendarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/GetCalendar_ById", ReplyAction="http://tempuri.org/ICalendar/GetCalendar_ByIdResponse")]
        MODEL.Classes.CalendarModel GetCalendar_ById(int calendarID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/GetCalendar_ById", ReplyAction="http://tempuri.org/ICalendar/GetCalendar_ByIdResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CalendarModel> GetCalendar_ByIdAsync(int calendarID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/CalendarStatus", ReplyAction="http://tempuri.org/ICalendar/CalendarStatusResponse")]
        MODEL.Classes.StatusModel[] CalendarStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendar/CalendarStatus", ReplyAction="http://tempuri.org/ICalendar/CalendarStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> CalendarStatusAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalendarChannel : CVAGestaoLayout.CVAGestaoService.ICalendar, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalendarClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.ICalendar>, CVAGestaoLayout.CVAGestaoService.ICalendar {
        
        public CalendarClient() {
        }
        
        public CalendarClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalendarClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalendarClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalendarClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel SaveCalendarHeader(MODEL.Classes.CalendarModel calendar) {
            return base.Channel.SaveCalendarHeader(calendar);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveCalendarHeaderAsync(MODEL.Classes.CalendarModel calendar) {
            return base.Channel.SaveCalendarHeaderAsync(calendar);
        }
        
        public MODEL.Classes.CalendarModel[] GetCalendar() {
            return base.Channel.GetCalendar();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CalendarModel[]> GetCalendarAsync() {
            return base.Channel.GetCalendarAsync();
        }
        
        public MODEL.Classes.CalendarModel GetCalendar_ById(int calendarID) {
            return base.Channel.GetCalendar_ById(calendarID);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CalendarModel> GetCalendar_ByIdAsync(int calendarID) {
            return base.Channel.GetCalendar_ByIdAsync(calendarID);
        }
        
        public MODEL.Classes.StatusModel[] CalendarStatus() {
            return base.Channel.CalendarStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> CalendarStatusAsync() {
            return base.Channel.CalendarStatusAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IStatus")]
    public interface IStatus {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatus/GetStatus", ReplyAction="http://tempuri.org/IStatus/GetStatusResponse")]
        MODEL.Classes.StatusModel[] GetStatus(int objectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatus/GetStatus", ReplyAction="http://tempuri.org/IStatus/GetStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> GetStatusAsync(int objectId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatusChannel : CVAGestaoLayout.CVAGestaoService.IStatus, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatusClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IStatus>, CVAGestaoLayout.CVAGestaoService.IStatus {
        
        public StatusClient() {
        }
        
        public StatusClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatusClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.StatusModel[] GetStatus(int objectId) {
            return base.Channel.GetStatus(objectId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> GetStatusAsync(int objectId) {
            return base.Channel.GetStatusAsync(objectId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IUser")]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUser", ReplyAction="http://tempuri.org/IUser/GetUserResponse")]
        MODEL.Classes.UserModel GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUser", ReplyAction="http://tempuri.org/IUser/GetUserResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.UserModel> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/SaveUser", ReplyAction="http://tempuri.org/IUser/SaveUserResponse")]
        MODEL.Classes.MessageModel SaveUser(MODEL.Classes.UserModel user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/SaveUser", ReplyAction="http://tempuri.org/IUser/SaveUserResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveUserAsync(MODEL.Classes.UserModel user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUserStatus", ReplyAction="http://tempuri.org/IUser/GetUserStatusResponse")]
        MODEL.Classes.StatusModel[] GetUserStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUserStatus", ReplyAction="http://tempuri.org/IUser/GetUserStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> GetUserStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUsers", ReplyAction="http://tempuri.org/IUser/GetUsersResponse")]
        MODEL.Classes.UserModel[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUsers", ReplyAction="http://tempuri.org/IUser/GetUsersResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.UserModel[]> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UpdateUser_ByUser", ReplyAction="http://tempuri.org/IUser/UpdateUser_ByUserResponse")]
        MODEL.Classes.MessageModel UpdateUser_ByUser(MODEL.Classes.UserModel user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UpdateUser_ByUser", ReplyAction="http://tempuri.org/IUser/UpdateUser_ByUserResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> UpdateUser_ByUserAsync(MODEL.Classes.UserModel user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : CVAGestaoLayout.CVAGestaoService.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IUser>, CVAGestaoLayout.CVAGestaoService.IUser {
        
        public UserClient() {
        }
        
        public UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.UserModel GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.UserModel> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public MODEL.Classes.MessageModel SaveUser(MODEL.Classes.UserModel user) {
            return base.Channel.SaveUser(user);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveUserAsync(MODEL.Classes.UserModel user) {
            return base.Channel.SaveUserAsync(user);
        }
        
        public MODEL.Classes.StatusModel[] GetUserStatus() {
            return base.Channel.GetUserStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> GetUserStatusAsync() {
            return base.Channel.GetUserStatusAsync();
        }
        
        public MODEL.Classes.UserModel[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.UserModel[]> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public MODEL.Classes.MessageModel UpdateUser_ByUser(MODEL.Classes.UserModel user) {
            return base.Channel.UpdateUser_ByUser(user);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> UpdateUser_ByUserAsync(MODEL.Classes.UserModel user) {
            return base.Channel.UpdateUser_ByUserAsync(user);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IProject")]
    public interface IProject {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/ProjectStatus", ReplyAction="http://tempuri.org/IProject/ProjectStatusResponse")]
        MODEL.Classes.StatusModel[] ProjectStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/ProjectStatus", ReplyAction="http://tempuri.org/IProject/ProjectStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> ProjectStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/GetActiveProjects", ReplyAction="http://tempuri.org/IProject/GetActiveProjectsResponse")]
        MODEL.Classes.ProjectModel[] GetActiveProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/GetActiveProjects", ReplyAction="http://tempuri.org/IProject/GetActiveProjectsResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> GetActiveProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Remove_Step", ReplyAction="http://tempuri.org/IProject/Remove_StepResponse")]
        MODEL.Classes.MessageModel Remove_Step(MODEL.Classes.StepModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Remove_Step", ReplyAction="http://tempuri.org/IProject/Remove_StepResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Remove_StepAsync(MODEL.Classes.StepModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Filter_Projects", ReplyAction="http://tempuri.org/IProject/Filter_ProjectsResponse")]
        MODEL.Classes.ProjectModel[] Filter_Projects(int clientId, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Filter_Projects", ReplyAction="http://tempuri.org/IProject/Filter_ProjectsResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Filter_ProjectsAsync(int clientId, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Get", ReplyAction="http://tempuri.org/IProject/GetResponse")]
        MODEL.Classes.ProjectModel Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Get", ReplyAction="http://tempuri.org/IProject/GetResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Get_ByUser", ReplyAction="http://tempuri.org/IProject/Get_ByUserResponse")]
        MODEL.Classes.ProjectModel[] Get_ByUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Get_ByUser", ReplyAction="http://tempuri.org/IProject/Get_ByUserResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Get_ByUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_GetSteps", ReplyAction="http://tempuri.org/IProject/Project_GetStepsResponse")]
        MODEL.Classes.StepModel[] Project_GetSteps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_GetSteps", ReplyAction="http://tempuri.org/IProject/Project_GetStepsResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StepModel[]> Project_GetStepsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/LoadCombo_Project", ReplyAction="http://tempuri.org/IProject/LoadCombo_ProjectResponse")]
        MODEL.Classes.ProjectModel[] LoadCombo_Project();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/LoadCombo_Project", ReplyAction="http://tempuri.org/IProject/LoadCombo_ProjectResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> LoadCombo_ProjectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_All", ReplyAction="http://tempuri.org/IProject/Project_Get_AllResponse")]
        MODEL.Classes.ProjectModel[] Project_Get_All();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_All", ReplyAction="http://tempuri.org/IProject/Project_Get_AllResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Project_Get_AllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_ByClient", ReplyAction="http://tempuri.org/IProject/Project_Get_ByClientResponse")]
        MODEL.Classes.ProjectModel[] Project_Get_ByClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_ByClient", ReplyAction="http://tempuri.org/IProject/Project_Get_ByClientResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Project_Get_ByClientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_ByCollaborator", ReplyAction="http://tempuri.org/IProject/Project_Get_ByCollaboratorResponse")]
        MODEL.Classes.ProjectModel[] Project_Get_ByCollaborator(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_ByCollaborator", ReplyAction="http://tempuri.org/IProject/Project_Get_ByCollaboratorResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Project_Get_ByCollaboratorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_ByClientAndCollaborator", ReplyAction="http://tempuri.org/IProject/Project_Get_ByClientAndCollaboratorResponse")]
        MODEL.Classes.ProjectModel[] Project_Get_ByClientAndCollaborator(int idClient, int idCollaborator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_ByClientAndCollaborator", ReplyAction="http://tempuri.org/IProject/Project_Get_ByClientAndCollaboratorResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Project_Get_ByClientAndCollaboratorAsync(int idClient, int idCollaborator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Save", ReplyAction="http://tempuri.org/IProject/Project_SaveResponse")]
        MODEL.Classes.MessageModel Project_Save(MODEL.Classes.ProjectModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Save", ReplyAction="http://tempuri.org/IProject/Project_SaveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Project_SaveAsync(MODEL.Classes.ProjectModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Generate_Number", ReplyAction="http://tempuri.org/IProject/Project_Generate_NumberResponse")]
        string Project_Generate_Number(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Generate_Number", ReplyAction="http://tempuri.org/IProject/Project_Generate_NumberResponse")]
        System.Threading.Tasks.Task<string> Project_Generate_NumberAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_StatusReportParcial", ReplyAction="http://tempuri.org/IProject/Project_Get_StatusReportParcialResponse")]
        MODEL.Classes.ProjectModel Project_Get_StatusReportParcial(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProject/Project_Get_StatusReportParcial", ReplyAction="http://tempuri.org/IProject/Project_Get_StatusReportParcialResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectModel> Project_Get_StatusReportParcialAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectChannel : CVAGestaoLayout.CVAGestaoService.IProject, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IProject>, CVAGestaoLayout.CVAGestaoService.IProject {
        
        public ProjectClient() {
        }
        
        public ProjectClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.StatusModel[] ProjectStatus() {
            return base.Channel.ProjectStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> ProjectStatusAsync() {
            return base.Channel.ProjectStatusAsync();
        }
        
        public MODEL.Classes.ProjectModel[] GetActiveProjects() {
            return base.Channel.GetActiveProjects();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> GetActiveProjectsAsync() {
            return base.Channel.GetActiveProjectsAsync();
        }
        
        public MODEL.Classes.MessageModel Remove_Step(MODEL.Classes.StepModel model) {
            return base.Channel.Remove_Step(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Remove_StepAsync(MODEL.Classes.StepModel model) {
            return base.Channel.Remove_StepAsync(model);
        }
        
        public MODEL.Classes.ProjectModel[] Filter_Projects(int clientId, string code) {
            return base.Channel.Filter_Projects(clientId, code);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Filter_ProjectsAsync(int clientId, string code) {
            return base.Channel.Filter_ProjectsAsync(clientId, code);
        }
        
        public MODEL.Classes.ProjectModel Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public MODEL.Classes.ProjectModel[] Get_ByUser(int id) {
            return base.Channel.Get_ByUser(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Get_ByUserAsync(int id) {
            return base.Channel.Get_ByUserAsync(id);
        }
        
        public MODEL.Classes.StepModel[] Project_GetSteps() {
            return base.Channel.Project_GetSteps();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StepModel[]> Project_GetStepsAsync() {
            return base.Channel.Project_GetStepsAsync();
        }
        
        public MODEL.Classes.ProjectModel[] LoadCombo_Project() {
            return base.Channel.LoadCombo_Project();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> LoadCombo_ProjectAsync() {
            return base.Channel.LoadCombo_ProjectAsync();
        }
        
        public MODEL.Classes.ProjectModel[] Project_Get_All() {
            return base.Channel.Project_Get_All();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Project_Get_AllAsync() {
            return base.Channel.Project_Get_AllAsync();
        }
        
        public MODEL.Classes.ProjectModel[] Project_Get_ByClient(int id) {
            return base.Channel.Project_Get_ByClient(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Project_Get_ByClientAsync(int id) {
            return base.Channel.Project_Get_ByClientAsync(id);
        }
        
        public MODEL.Classes.ProjectModel[] Project_Get_ByCollaborator(int id) {
            return base.Channel.Project_Get_ByCollaborator(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Project_Get_ByCollaboratorAsync(int id) {
            return base.Channel.Project_Get_ByCollaboratorAsync(id);
        }
        
        public MODEL.Classes.ProjectModel[] Project_Get_ByClientAndCollaborator(int idClient, int idCollaborator) {
            return base.Channel.Project_Get_ByClientAndCollaborator(idClient, idCollaborator);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel[]> Project_Get_ByClientAndCollaboratorAsync(int idClient, int idCollaborator) {
            return base.Channel.Project_Get_ByClientAndCollaboratorAsync(idClient, idCollaborator);
        }
        
        public MODEL.Classes.MessageModel Project_Save(MODEL.Classes.ProjectModel model) {
            return base.Channel.Project_Save(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Project_SaveAsync(MODEL.Classes.ProjectModel model) {
            return base.Channel.Project_SaveAsync(model);
        }
        
        public string Project_Generate_Number(int id) {
            return base.Channel.Project_Generate_Number(id);
        }
        
        public System.Threading.Tasks.Task<string> Project_Generate_NumberAsync(int id) {
            return base.Channel.Project_Generate_NumberAsync(id);
        }
        
        public MODEL.Classes.ProjectModel Project_Get_StatusReportParcial(int id) {
            return base.Channel.Project_Get_StatusReportParcial(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectModel> Project_Get_StatusReportParcialAsync(int id) {
            return base.Channel.Project_Get_StatusReportParcialAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.ISpecialty")]
    public interface ISpecialty {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/SaveSpecialty", ReplyAction="http://tempuri.org/ISpecialty/SaveSpecialtyResponse")]
        MODEL.Classes.MessageModel SaveSpecialty(MODEL.Classes.SpecialtyModel specialty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/SaveSpecialty", ReplyAction="http://tempuri.org/ISpecialty/SaveSpecialtyResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveSpecialtyAsync(MODEL.Classes.SpecialtyModel specialty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/SpecialtyStatus", ReplyAction="http://tempuri.org/ISpecialty/SpecialtyStatusResponse")]
        MODEL.Classes.StatusModel[] SpecialtyStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/SpecialtyStatus", ReplyAction="http://tempuri.org/ISpecialty/SpecialtyStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> SpecialtyStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/GetSpecialtys", ReplyAction="http://tempuri.org/ISpecialty/GetSpecialtysResponse")]
        MODEL.Classes.SpecialtyModel[] GetSpecialtys();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/GetSpecialtys", ReplyAction="http://tempuri.org/ISpecialty/GetSpecialtysResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> GetSpecialtysAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/GetSpecialtyByColaborator", ReplyAction="http://tempuri.org/ISpecialty/GetSpecialtyByColaboratorResponse")]
        MODEL.Classes.SpecialtyModel[] GetSpecialtyByColaborator(MODEL.Classes.CollaboratorModel collaborator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/GetSpecialtyByColaborator", ReplyAction="http://tempuri.org/ISpecialty/GetSpecialtyByColaboratorResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> GetSpecialtyByColaboratorAsync(MODEL.Classes.CollaboratorModel collaborator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/GetSpecialty_ByID", ReplyAction="http://tempuri.org/ISpecialty/GetSpecialty_ByIDResponse")]
        MODEL.Classes.SpecialtyModel GetSpecialty_ByID(int specialtyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/GetSpecialty_ByID", ReplyAction="http://tempuri.org/ISpecialty/GetSpecialty_ByIDResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel> GetSpecialty_ByIDAsync(int specialtyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/Specialty_Get_All", ReplyAction="http://tempuri.org/ISpecialty/Specialty_Get_AllResponse")]
        MODEL.Classes.SpecialtyModel[] Specialty_Get_All();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/Specialty_Get_All", ReplyAction="http://tempuri.org/ISpecialty/Specialty_Get_AllResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> Specialty_Get_AllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/Specialty_Get_TiposEspecialidade", ReplyAction="http://tempuri.org/ISpecialty/Specialty_Get_TiposEspecialidadeResponse")]
        MODEL.Classes.SpecialtyTypeModel[] Specialty_Get_TiposEspecialidade();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISpecialty/Specialty_Get_TiposEspecialidade", ReplyAction="http://tempuri.org/ISpecialty/Specialty_Get_TiposEspecialidadeResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.SpecialtyTypeModel[]> Specialty_Get_TiposEspecialidadeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISpecialtyChannel : CVAGestaoLayout.CVAGestaoService.ISpecialty, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SpecialtyClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.ISpecialty>, CVAGestaoLayout.CVAGestaoService.ISpecialty {
        
        public SpecialtyClient() {
        }
        
        public SpecialtyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SpecialtyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpecialtyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SpecialtyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel SaveSpecialty(MODEL.Classes.SpecialtyModel specialty) {
            return base.Channel.SaveSpecialty(specialty);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveSpecialtyAsync(MODEL.Classes.SpecialtyModel specialty) {
            return base.Channel.SaveSpecialtyAsync(specialty);
        }
        
        public MODEL.Classes.StatusModel[] SpecialtyStatus() {
            return base.Channel.SpecialtyStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> SpecialtyStatusAsync() {
            return base.Channel.SpecialtyStatusAsync();
        }
        
        public MODEL.Classes.SpecialtyModel[] GetSpecialtys() {
            return base.Channel.GetSpecialtys();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> GetSpecialtysAsync() {
            return base.Channel.GetSpecialtysAsync();
        }
        
        public MODEL.Classes.SpecialtyModel[] GetSpecialtyByColaborator(MODEL.Classes.CollaboratorModel collaborator) {
            return base.Channel.GetSpecialtyByColaborator(collaborator);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> GetSpecialtyByColaboratorAsync(MODEL.Classes.CollaboratorModel collaborator) {
            return base.Channel.GetSpecialtyByColaboratorAsync(collaborator);
        }
        
        public MODEL.Classes.SpecialtyModel GetSpecialty_ByID(int specialtyID) {
            return base.Channel.GetSpecialty_ByID(specialtyID);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel> GetSpecialty_ByIDAsync(int specialtyID) {
            return base.Channel.GetSpecialty_ByIDAsync(specialtyID);
        }
        
        public MODEL.Classes.SpecialtyModel[] Specialty_Get_All() {
            return base.Channel.Specialty_Get_All();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> Specialty_Get_AllAsync() {
            return base.Channel.Specialty_Get_AllAsync();
        }
        
        public MODEL.Classes.SpecialtyTypeModel[] Specialty_Get_TiposEspecialidade() {
            return base.Channel.Specialty_Get_TiposEspecialidade();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.SpecialtyTypeModel[]> Specialty_Get_TiposEspecialidadeAsync() {
            return base.Channel.Specialty_Get_TiposEspecialidadeAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.ICollaborator")]
    public interface ICollaborator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Get", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_GetResponse")]
        MODEL.Classes.CollaboratorModel Collaborator_Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Get", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_GetResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel> Collaborator_GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Insert", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_InsertResponse")]
        MODEL.Classes.MessageModel Collaborator_Insert(MODEL.Classes.CollaboratorModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Insert", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_InsertResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Collaborator_InsertAsync(MODEL.Classes.CollaboratorModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Update", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_UpdateResponse")]
        MODEL.Classes.MessageModel Collaborator_Update(MODEL.Classes.CollaboratorModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Update", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_UpdateResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Collaborator_UpdateAsync(MODEL.Classes.CollaboratorModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Remove_Specialty", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_Remove_SpecialtyResponse")]
        MODEL.Classes.MessageModel Collaborator_Remove_Specialty(MODEL.Classes.SpecialtyModel model, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Remove_Specialty", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_Remove_SpecialtyResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Collaborator_Remove_SpecialtyAsync(MODEL.Classes.SpecialtyModel model, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/ImportarDadosColaborador", ReplyAction="http://tempuri.org/ICollaborator/ImportarDadosColaboradorResponse")]
        MODEL.Classes.CollaboratorModel ImportarDadosColaborador();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/ImportarDadosColaborador", ReplyAction="http://tempuri.org/ICollaborator/ImportarDadosColaboradorResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel> ImportarDadosColaboradorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/CollaboratorStatus", ReplyAction="http://tempuri.org/ICollaborator/CollaboratorStatusResponse")]
        MODEL.Classes.StatusModel[] CollaboratorStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/CollaboratorStatus", ReplyAction="http://tempuri.org/ICollaborator/CollaboratorStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> CollaboratorStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaborator", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorResponse")]
        MODEL.Classes.CollaboratorModel[] GetCollaborator();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaborator", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> GetCollaboratorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/LoadCombo_Collaborator", ReplyAction="http://tempuri.org/ICollaborator/LoadCombo_CollaboratorResponse")]
        MODEL.Classes.CollaboratorModel[] LoadCombo_Collaborator();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/LoadCombo_Collaborator", ReplyAction="http://tempuri.org/ICollaborator/LoadCombo_CollaboratorResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> LoadCombo_CollaboratorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Get_NotUser", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_Get_NotUserResponse")]
        MODEL.Classes.CollaboratorModel[] Collaborator_Get_NotUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Get_NotUser", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_Get_NotUserResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> Collaborator_Get_NotUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Get_Specialties", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_Get_SpecialtiesResponse")]
        MODEL.Classes.SpecialtyModel[] Collaborator_Get_Specialties(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Get_Specialties", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_Get_SpecialtiesResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> Collaborator_Get_SpecialtiesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetPMs", ReplyAction="http://tempuri.org/ICollaborator/GetPMsResponse")]
        MODEL.Classes.CollaboratorModel[] GetPMs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetPMs", ReplyAction="http://tempuri.org/ICollaborator/GetPMsResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> GetPMsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Get_Active", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_Get_ActiveResponse")]
        MODEL.Classes.CollaboratorModel[] Collaborator_Get_Active();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Collaborator_Get_Active", ReplyAction="http://tempuri.org/ICollaborator/Collaborator_Get_ActiveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> Collaborator_Get_ActiveAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaboratorTypes", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorTypesResponse")]
        MODEL.Classes.CollaboratorTypeModel[] GetCollaboratorTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaboratorTypes", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorTypesResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorTypeModel[]> GetCollaboratorTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/CollaboratorFromSpecialty", ReplyAction="http://tempuri.org/ICollaborator/CollaboratorFromSpecialtyResponse")]
        MODEL.Classes.CollaboratorModel[] CollaboratorFromSpecialty(MODEL.Classes.SpecialtyModel specialty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/CollaboratorFromSpecialty", ReplyAction="http://tempuri.org/ICollaborator/CollaboratorFromSpecialtyResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> CollaboratorFromSpecialtyAsync(MODEL.Classes.SpecialtyModel specialty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Get_CollaboratorBySpecialty", ReplyAction="http://tempuri.org/ICollaborator/Get_CollaboratorBySpecialtyResponse")]
        MODEL.Classes.CollaboratorModel[] Get_CollaboratorBySpecialty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/Get_CollaboratorBySpecialty", ReplyAction="http://tempuri.org/ICollaborator/Get_CollaboratorBySpecialtyResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> Get_CollaboratorBySpecialtyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaboratorById", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorByIdResponse")]
        MODEL.Classes.CollaboratorModel GetCollaboratorById(int collaboratorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaboratorById", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorByIdResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel> GetCollaboratorByIdAsync(int collaboratorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaboratorNotUser", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorNotUserResponse")]
        MODEL.Classes.CollaboratorModel[] GetCollaboratorNotUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaboratorNotUser", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorNotUserResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> GetCollaboratorNotUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetSpecialtiesForCollaborator", ReplyAction="http://tempuri.org/ICollaborator/GetSpecialtiesForCollaboratorResponse")]
        MODEL.Classes.SpecialtyModel[] GetSpecialtiesForCollaborator(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetSpecialtiesForCollaborator", ReplyAction="http://tempuri.org/ICollaborator/GetSpecialtiesForCollaboratorResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> GetSpecialtiesForCollaboratorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaboratorByFilters", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorByFiltersResponse")]
        MODEL.Classes.CollaboratorModel[] GetCollaboratorByFilters(string name, string cpf, string cnpj, int sector, int specialty, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollaborator/GetCollaboratorByFilters", ReplyAction="http://tempuri.org/ICollaborator/GetCollaboratorByFiltersResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> GetCollaboratorByFiltersAsync(string name, string cpf, string cnpj, int sector, int specialty, int status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICollaboratorChannel : CVAGestaoLayout.CVAGestaoService.ICollaborator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CollaboratorClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.ICollaborator>, CVAGestaoLayout.CVAGestaoService.ICollaborator {
        
        public CollaboratorClient() {
        }
        
        public CollaboratorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CollaboratorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CollaboratorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CollaboratorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.CollaboratorModel Collaborator_Get(int id) {
            return base.Channel.Collaborator_Get(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel> Collaborator_GetAsync(int id) {
            return base.Channel.Collaborator_GetAsync(id);
        }
        
        public MODEL.Classes.MessageModel Collaborator_Insert(MODEL.Classes.CollaboratorModel model) {
            return base.Channel.Collaborator_Insert(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Collaborator_InsertAsync(MODEL.Classes.CollaboratorModel model) {
            return base.Channel.Collaborator_InsertAsync(model);
        }
        
        public MODEL.Classes.MessageModel Collaborator_Update(MODEL.Classes.CollaboratorModel model) {
            return base.Channel.Collaborator_Update(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Collaborator_UpdateAsync(MODEL.Classes.CollaboratorModel model) {
            return base.Channel.Collaborator_UpdateAsync(model);
        }
        
        public MODEL.Classes.MessageModel Collaborator_Remove_Specialty(MODEL.Classes.SpecialtyModel model, int idUser) {
            return base.Channel.Collaborator_Remove_Specialty(model, idUser);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Collaborator_Remove_SpecialtyAsync(MODEL.Classes.SpecialtyModel model, int idUser) {
            return base.Channel.Collaborator_Remove_SpecialtyAsync(model, idUser);
        }
        
        public MODEL.Classes.CollaboratorModel ImportarDadosColaborador() {
            return base.Channel.ImportarDadosColaborador();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel> ImportarDadosColaboradorAsync() {
            return base.Channel.ImportarDadosColaboradorAsync();
        }
        
        public MODEL.Classes.StatusModel[] CollaboratorStatus() {
            return base.Channel.CollaboratorStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> CollaboratorStatusAsync() {
            return base.Channel.CollaboratorStatusAsync();
        }
        
        public MODEL.Classes.CollaboratorModel[] GetCollaborator() {
            return base.Channel.GetCollaborator();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> GetCollaboratorAsync() {
            return base.Channel.GetCollaboratorAsync();
        }
        
        public MODEL.Classes.CollaboratorModel[] LoadCombo_Collaborator() {
            return base.Channel.LoadCombo_Collaborator();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> LoadCombo_CollaboratorAsync() {
            return base.Channel.LoadCombo_CollaboratorAsync();
        }
        
        public MODEL.Classes.CollaboratorModel[] Collaborator_Get_NotUser() {
            return base.Channel.Collaborator_Get_NotUser();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> Collaborator_Get_NotUserAsync() {
            return base.Channel.Collaborator_Get_NotUserAsync();
        }
        
        public MODEL.Classes.SpecialtyModel[] Collaborator_Get_Specialties(int id) {
            return base.Channel.Collaborator_Get_Specialties(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> Collaborator_Get_SpecialtiesAsync(int id) {
            return base.Channel.Collaborator_Get_SpecialtiesAsync(id);
        }
        
        public MODEL.Classes.CollaboratorModel[] GetPMs() {
            return base.Channel.GetPMs();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> GetPMsAsync() {
            return base.Channel.GetPMsAsync();
        }
        
        public MODEL.Classes.CollaboratorModel[] Collaborator_Get_Active() {
            return base.Channel.Collaborator_Get_Active();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> Collaborator_Get_ActiveAsync() {
            return base.Channel.Collaborator_Get_ActiveAsync();
        }
        
        public MODEL.Classes.CollaboratorTypeModel[] GetCollaboratorTypes() {
            return base.Channel.GetCollaboratorTypes();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorTypeModel[]> GetCollaboratorTypesAsync() {
            return base.Channel.GetCollaboratorTypesAsync();
        }
        
        public MODEL.Classes.CollaboratorModel[] CollaboratorFromSpecialty(MODEL.Classes.SpecialtyModel specialty) {
            return base.Channel.CollaboratorFromSpecialty(specialty);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> CollaboratorFromSpecialtyAsync(MODEL.Classes.SpecialtyModel specialty) {
            return base.Channel.CollaboratorFromSpecialtyAsync(specialty);
        }
        
        public MODEL.Classes.CollaboratorModel[] Get_CollaboratorBySpecialty(int id) {
            return base.Channel.Get_CollaboratorBySpecialty(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> Get_CollaboratorBySpecialtyAsync(int id) {
            return base.Channel.Get_CollaboratorBySpecialtyAsync(id);
        }
        
        public MODEL.Classes.CollaboratorModel GetCollaboratorById(int collaboratorId) {
            return base.Channel.GetCollaboratorById(collaboratorId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel> GetCollaboratorByIdAsync(int collaboratorId) {
            return base.Channel.GetCollaboratorByIdAsync(collaboratorId);
        }
        
        public MODEL.Classes.CollaboratorModel[] GetCollaboratorNotUser() {
            return base.Channel.GetCollaboratorNotUser();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> GetCollaboratorNotUserAsync() {
            return base.Channel.GetCollaboratorNotUserAsync();
        }
        
        public MODEL.Classes.SpecialtyModel[] GetSpecialtiesForCollaborator(int id) {
            return base.Channel.GetSpecialtiesForCollaborator(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.SpecialtyModel[]> GetSpecialtiesForCollaboratorAsync(int id) {
            return base.Channel.GetSpecialtiesForCollaboratorAsync(id);
        }
        
        public MODEL.Classes.CollaboratorModel[] GetCollaboratorByFilters(string name, string cpf, string cnpj, int sector, int specialty, int status) {
            return base.Channel.GetCollaboratorByFilters(name, cpf, cnpj, sector, specialty, status);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.CollaboratorModel[]> GetCollaboratorByFiltersAsync(string name, string cpf, string cnpj, int sector, int specialty, int status) {
            return base.Channel.GetCollaboratorByFiltersAsync(name, cpf, cnpj, sector, specialty, status);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IGenre")]
    public interface IGenre {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenre/GetGenre", ReplyAction="http://tempuri.org/IGenre/GetGenreResponse")]
        MODEL.Classes.GenreModel[] GetGenre();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGenre/GetGenre", ReplyAction="http://tempuri.org/IGenre/GetGenreResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.GenreModel[]> GetGenreAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGenreChannel : CVAGestaoLayout.CVAGestaoService.IGenre, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenreClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IGenre>, CVAGestaoLayout.CVAGestaoService.IGenre {
        
        public GenreClient() {
        }
        
        public GenreClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GenreClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GenreClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GenreClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.GenreModel[] GetGenre() {
            return base.Channel.GetGenre();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.GenreModel[]> GetGenreAsync() {
            return base.Channel.GetGenreAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IMaritalStatus")]
    public interface IMaritalStatus {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaritalStatus/GetMaritalStatus", ReplyAction="http://tempuri.org/IMaritalStatus/GetMaritalStatusResponse")]
        MODEL.Classes.MaritalStatusModel[] GetMaritalStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMaritalStatus/GetMaritalStatus", ReplyAction="http://tempuri.org/IMaritalStatus/GetMaritalStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MaritalStatusModel[]> GetMaritalStatusAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMaritalStatusChannel : CVAGestaoLayout.CVAGestaoService.IMaritalStatus, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MaritalStatusClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IMaritalStatus>, CVAGestaoLayout.CVAGestaoService.IMaritalStatus {
        
        public MaritalStatusClient() {
        }
        
        public MaritalStatusClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MaritalStatusClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaritalStatusClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MaritalStatusClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MaritalStatusModel[] GetMaritalStatus() {
            return base.Channel.GetMaritalStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MaritalStatusModel[]> GetMaritalStatusAsync() {
            return base.Channel.GetMaritalStatusAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IUf")]
    public interface IUf {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUf/GetUf", ReplyAction="http://tempuri.org/IUf/GetUfResponse")]
        MODEL.Classes.UfModel[] GetUf();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUf/GetUf", ReplyAction="http://tempuri.org/IUf/GetUfResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.UfModel[]> GetUfAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUfChannel : CVAGestaoLayout.CVAGestaoService.IUf, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UfClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IUf>, CVAGestaoLayout.CVAGestaoService.IUf {
        
        public UfClient() {
        }
        
        public UfClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UfClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.UfModel[] GetUf() {
            return base.Channel.GetUf();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.UfModel[]> GetUfAsync() {
            return base.Channel.GetUfAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IClient")]
    public interface IClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/SaveClient", ReplyAction="http://tempuri.org/IClient/SaveClientResponse")]
        MODEL.Classes.MessageModel SaveClient(MODEL.Classes.ClientModel client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/SaveClient", ReplyAction="http://tempuri.org/IClient/SaveClientResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveClientAsync(MODEL.Classes.ClientModel client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientStatus", ReplyAction="http://tempuri.org/IClient/GetClientStatusResponse")]
        MODEL.Classes.StatusModel[] GetClientStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientStatus", ReplyAction="http://tempuri.org/IClient/GetClientStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> GetClientStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LoadCombo_Client", ReplyAction="http://tempuri.org/IClient/LoadCombo_ClientResponse")]
        MODEL.Classes.ClientModel[] LoadCombo_Client();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LoadCombo_Client", ReplyAction="http://tempuri.org/IClient/LoadCombo_ClientResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ClientModel[]> LoadCombo_ClientAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/Client_Search", ReplyAction="http://tempuri.org/IClient/Client_SearchResponse")]
        MODEL.Classes.ClientModel[] Client_Search(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/Client_Search", ReplyAction="http://tempuri.org/IClient/Client_SearchResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ClientModel[]> Client_SearchAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientContacts", ReplyAction="http://tempuri.org/IClient/GetClientContactsResponse")]
        MODEL.Classes.ContactModel[] GetClientContacts(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientContacts", ReplyAction="http://tempuri.org/IClient/GetClientContactsResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ContactModel[]> GetClientContactsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientBy_ID", ReplyAction="http://tempuri.org/IClient/GetClientBy_IDResponse")]
        MODEL.Classes.ClientModel GetClientBy_ID(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientBy_ID", ReplyAction="http://tempuri.org/IClient/GetClientBy_IDResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ClientModel> GetClientBy_IDAsync(int clientId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientChannel : CVAGestaoLayout.CVAGestaoService.IClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IClient>, CVAGestaoLayout.CVAGestaoService.IClient {
        
        public ClientClient() {
        }
        
        public ClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel SaveClient(MODEL.Classes.ClientModel client) {
            return base.Channel.SaveClient(client);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveClientAsync(MODEL.Classes.ClientModel client) {
            return base.Channel.SaveClientAsync(client);
        }
        
        public MODEL.Classes.StatusModel[] GetClientStatus() {
            return base.Channel.GetClientStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> GetClientStatusAsync() {
            return base.Channel.GetClientStatusAsync();
        }
        
        public MODEL.Classes.ClientModel[] LoadCombo_Client() {
            return base.Channel.LoadCombo_Client();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ClientModel[]> LoadCombo_ClientAsync() {
            return base.Channel.LoadCombo_ClientAsync();
        }
        
        public MODEL.Classes.ClientModel[] Client_Search(string name) {
            return base.Channel.Client_Search(name);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ClientModel[]> Client_SearchAsync(string name) {
            return base.Channel.Client_SearchAsync(name);
        }
        
        public MODEL.Classes.ContactModel[] GetClientContacts(int id) {
            return base.Channel.GetClientContacts(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ContactModel[]> GetClientContactsAsync(int id) {
            return base.Channel.GetClientContactsAsync(id);
        }
        
        public MODEL.Classes.ClientModel GetClientBy_ID(int clientId) {
            return base.Channel.GetClientBy_ID(clientId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ClientModel> GetClientBy_IDAsync(int clientId) {
            return base.Channel.GetClientBy_IDAsync(clientId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IExpense")]
    public interface IExpense {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/Expense_Save", ReplyAction="http://tempuri.org/IExpense/Expense_SaveResponse")]
        MODEL.Classes.MessageModel Expense_Save(MODEL.Classes.ExpenseModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/Expense_Save", ReplyAction="http://tempuri.org/IExpense/Expense_SaveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Expense_SaveAsync(MODEL.Classes.ExpenseModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/GetExpense_ByUserID", ReplyAction="http://tempuri.org/IExpense/GetExpense_ByUserIDResponse")]
        MODEL.Classes.ExpenseModel[] GetExpense_ByUserID(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/GetExpense_ByUserID", ReplyAction="http://tempuri.org/IExpense/GetExpense_ByUserIDResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ExpenseModel[]> GetExpense_ByUserIDAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/Expense_Get", ReplyAction="http://tempuri.org/IExpense/Expense_GetResponse")]
        MODEL.Classes.ExpenseModel Expense_Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/Expense_Get", ReplyAction="http://tempuri.org/IExpense/Expense_GetResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ExpenseModel> Expense_GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/Expense_Search", ReplyAction="http://tempuri.org/IExpense/Expense_SearchResponse")]
        MODEL.Classes.ExpenseModel[] Expense_Search(int col, int cli, int prj, System.Nullable<System.DateTime> de, System.Nullable<System.DateTime> ate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/Expense_Search", ReplyAction="http://tempuri.org/IExpense/Expense_SearchResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ExpenseModel[]> Expense_SearchAsync(int col, int cli, int prj, System.Nullable<System.DateTime> de, System.Nullable<System.DateTime> ate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/Expense_Remove", ReplyAction="http://tempuri.org/IExpense/Expense_RemoveResponse")]
        MODEL.Classes.MessageModel Expense_Remove(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpense/Expense_Remove", ReplyAction="http://tempuri.org/IExpense/Expense_RemoveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Expense_RemoveAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExpenseChannel : CVAGestaoLayout.CVAGestaoService.IExpense, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExpenseClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IExpense>, CVAGestaoLayout.CVAGestaoService.IExpense {
        
        public ExpenseClient() {
        }
        
        public ExpenseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExpenseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpenseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpenseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel Expense_Save(MODEL.Classes.ExpenseModel model) {
            return base.Channel.Expense_Save(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Expense_SaveAsync(MODEL.Classes.ExpenseModel model) {
            return base.Channel.Expense_SaveAsync(model);
        }
        
        public MODEL.Classes.ExpenseModel[] GetExpense_ByUserID(int userId) {
            return base.Channel.GetExpense_ByUserID(userId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ExpenseModel[]> GetExpense_ByUserIDAsync(int userId) {
            return base.Channel.GetExpense_ByUserIDAsync(userId);
        }
        
        public MODEL.Classes.ExpenseModel Expense_Get(int id) {
            return base.Channel.Expense_Get(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ExpenseModel> Expense_GetAsync(int id) {
            return base.Channel.Expense_GetAsync(id);
        }
        
        public MODEL.Classes.ExpenseModel[] Expense_Search(int col, int cli, int prj, System.Nullable<System.DateTime> de, System.Nullable<System.DateTime> ate) {
            return base.Channel.Expense_Search(col, cli, prj, de, ate);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ExpenseModel[]> Expense_SearchAsync(int col, int cli, int prj, System.Nullable<System.DateTime> de, System.Nullable<System.DateTime> ate) {
            return base.Channel.Expense_SearchAsync(col, cli, prj, de, ate);
        }
        
        public MODEL.Classes.MessageModel Expense_Remove(int id) {
            return base.Channel.Expense_Remove(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Expense_RemoveAsync(int id) {
            return base.Channel.Expense_RemoveAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IProjectStep")]
    public interface IProjectStep {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/SaveProjectStep", ReplyAction="http://tempuri.org/IProjectStep/SaveProjectStepResponse")]
        MODEL.Classes.MessageModel SaveProjectStep(MODEL.Classes.ProjectStepModel projectStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/SaveProjectStep", ReplyAction="http://tempuri.org/IProjectStep/SaveProjectStepResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveProjectStepAsync(MODEL.Classes.ProjectStepModel projectStep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/GetProjectStep", ReplyAction="http://tempuri.org/IProjectStep/GetProjectStepResponse")]
        MODEL.Classes.ProjectStepModel[] GetProjectStep(int isProject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/GetProjectStep", ReplyAction="http://tempuri.org/IProjectStep/GetProjectStepResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectStepModel[]> GetProjectStepAsync(int isProject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/GetProjectStepStatus", ReplyAction="http://tempuri.org/IProjectStep/GetProjectStepStatusResponse")]
        MODEL.Classes.StatusModel[] GetProjectStepStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/GetProjectStepStatus", ReplyAction="http://tempuri.org/IProjectStep/GetProjectStepStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> GetProjectStepStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/Get_ProjectSteps", ReplyAction="http://tempuri.org/IProjectStep/Get_ProjectStepsResponse")]
        MODEL.Classes.StepModel[] Get_ProjectSteps(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/Get_ProjectSteps", ReplyAction="http://tempuri.org/IProjectStep/Get_ProjectStepsResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StepModel[]> Get_ProjectStepsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/GetAllProjectStep", ReplyAction="http://tempuri.org/IProjectStep/GetAllProjectStepResponse")]
        MODEL.Classes.ProjectStepModel[] GetAllProjectStep();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/GetAllProjectStep", ReplyAction="http://tempuri.org/IProjectStep/GetAllProjectStepResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectStepModel[]> GetAllProjectStepAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/GetProjectStep_ByID", ReplyAction="http://tempuri.org/IProjectStep/GetProjectStep_ByIDResponse")]
        MODEL.Classes.ProjectStepModel GetProjectStep_ByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectStep/GetProjectStep_ByID", ReplyAction="http://tempuri.org/IProjectStep/GetProjectStep_ByIDResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectStepModel> GetProjectStep_ByIDAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectStepChannel : CVAGestaoLayout.CVAGestaoService.IProjectStep, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectStepClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IProjectStep>, CVAGestaoLayout.CVAGestaoService.IProjectStep {
        
        public ProjectStepClient() {
        }
        
        public ProjectStepClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectStepClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectStepClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectStepClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel SaveProjectStep(MODEL.Classes.ProjectStepModel projectStep) {
            return base.Channel.SaveProjectStep(projectStep);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveProjectStepAsync(MODEL.Classes.ProjectStepModel projectStep) {
            return base.Channel.SaveProjectStepAsync(projectStep);
        }
        
        public MODEL.Classes.ProjectStepModel[] GetProjectStep(int isProject) {
            return base.Channel.GetProjectStep(isProject);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectStepModel[]> GetProjectStepAsync(int isProject) {
            return base.Channel.GetProjectStepAsync(isProject);
        }
        
        public MODEL.Classes.StatusModel[] GetProjectStepStatus() {
            return base.Channel.GetProjectStepStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> GetProjectStepStatusAsync() {
            return base.Channel.GetProjectStepStatusAsync();
        }
        
        public MODEL.Classes.StepModel[] Get_ProjectSteps(int id) {
            return base.Channel.Get_ProjectSteps(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StepModel[]> Get_ProjectStepsAsync(int id) {
            return base.Channel.Get_ProjectStepsAsync(id);
        }
        
        public MODEL.Classes.ProjectStepModel[] GetAllProjectStep() {
            return base.Channel.GetAllProjectStep();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectStepModel[]> GetAllProjectStepAsync() {
            return base.Channel.GetAllProjectStepAsync();
        }
        
        public MODEL.Classes.ProjectStepModel GetProjectStep_ByID(int id) {
            return base.Channel.GetProjectStep_ByID(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectStepModel> GetProjectStep_ByIDAsync(int id) {
            return base.Channel.GetProjectStep_ByIDAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IOpportunity")]
    public interface IOpportunity {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/SaveOportunitty", ReplyAction="http://tempuri.org/IOpportunity/SaveOportunittyResponse")]
        MODEL.Classes.MessageModel SaveOportunitty(MODEL.Classes.OpportunityModel oportunitty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/SaveOportunitty", ReplyAction="http://tempuri.org/IOpportunity/SaveOportunittyResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveOportunittyAsync(MODEL.Classes.OpportunityModel oportunitty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/ConvertOportunittyToProject", ReplyAction="http://tempuri.org/IOpportunity/ConvertOportunittyToProjectResponse")]
        MODEL.Classes.MessageModel ConvertOportunittyToProject(MODEL.Classes.OpportunityModel oportunitty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/ConvertOportunittyToProject", ReplyAction="http://tempuri.org/IOpportunity/ConvertOportunittyToProjectResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ConvertOportunittyToProjectAsync(MODEL.Classes.OpportunityModel oportunitty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/GetOpportunities", ReplyAction="http://tempuri.org/IOpportunity/GetOpportunitiesResponse")]
        MODEL.Classes.OpportunityModel[] GetOpportunities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/GetOpportunities", ReplyAction="http://tempuri.org/IOpportunity/GetOpportunitiesResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.OpportunityModel[]> GetOpportunitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/GetOportunittyById", ReplyAction="http://tempuri.org/IOpportunity/GetOportunittyByIdResponse")]
        MODEL.Classes.OpportunityModel GetOportunittyById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/GetOportunittyById", ReplyAction="http://tempuri.org/IOpportunity/GetOportunittyByIdResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.OpportunityModel> GetOportunittyByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/Oportunitty_GetSteps", ReplyAction="http://tempuri.org/IOpportunity/Oportunitty_GetStepsResponse")]
        MODEL.Classes.StepModel[] Oportunitty_GetSteps();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/Oportunitty_GetSteps", ReplyAction="http://tempuri.org/IOpportunity/Oportunitty_GetStepsResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StepModel[]> Oportunitty_GetStepsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/Search", ReplyAction="http://tempuri.org/IOpportunity/SearchResponse")]
        MODEL.Classes.OpportunityModel[] Search(string code, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/Search", ReplyAction="http://tempuri.org/IOpportunity/SearchResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.OpportunityModel[]> SearchAsync(string code, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/NewCodeGenerator", ReplyAction="http://tempuri.org/IOpportunity/NewCodeGeneratorResponse")]
        string NewCodeGenerator();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpportunity/NewCodeGenerator", ReplyAction="http://tempuri.org/IOpportunity/NewCodeGeneratorResponse")]
        System.Threading.Tasks.Task<string> NewCodeGeneratorAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOpportunityChannel : CVAGestaoLayout.CVAGestaoService.IOpportunity, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpportunityClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IOpportunity>, CVAGestaoLayout.CVAGestaoService.IOpportunity {
        
        public OpportunityClient() {
        }
        
        public OpportunityClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OpportunityClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpportunityClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpportunityClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel SaveOportunitty(MODEL.Classes.OpportunityModel oportunitty) {
            return base.Channel.SaveOportunitty(oportunitty);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveOportunittyAsync(MODEL.Classes.OpportunityModel oportunitty) {
            return base.Channel.SaveOportunittyAsync(oportunitty);
        }
        
        public MODEL.Classes.MessageModel ConvertOportunittyToProject(MODEL.Classes.OpportunityModel oportunitty) {
            return base.Channel.ConvertOportunittyToProject(oportunitty);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ConvertOportunittyToProjectAsync(MODEL.Classes.OpportunityModel oportunitty) {
            return base.Channel.ConvertOportunittyToProjectAsync(oportunitty);
        }
        
        public MODEL.Classes.OpportunityModel[] GetOpportunities() {
            return base.Channel.GetOpportunities();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.OpportunityModel[]> GetOpportunitiesAsync() {
            return base.Channel.GetOpportunitiesAsync();
        }
        
        public MODEL.Classes.OpportunityModel GetOportunittyById(int id) {
            return base.Channel.GetOportunittyById(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.OpportunityModel> GetOportunittyByIdAsync(int id) {
            return base.Channel.GetOportunittyByIdAsync(id);
        }
        
        public MODEL.Classes.StepModel[] Oportunitty_GetSteps() {
            return base.Channel.Oportunitty_GetSteps();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StepModel[]> Oportunitty_GetStepsAsync() {
            return base.Channel.Oportunitty_GetStepsAsync();
        }
        
        public MODEL.Classes.OpportunityModel[] Search(string code, int clientId) {
            return base.Channel.Search(code, clientId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.OpportunityModel[]> SearchAsync(string code, int clientId) {
            return base.Channel.SearchAsync(code, clientId);
        }
        
        public string NewCodeGenerator() {
            return base.Channel.NewCodeGenerator();
        }
        
        public System.Threading.Tasks.Task<string> NewCodeGeneratorAsync() {
            return base.Channel.NewCodeGeneratorAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.INote")]
    public interface INote {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/Save", ReplyAction="http://tempuri.org/INote/SaveResponse")]
        MODEL.Classes.MessageModel Save(MODEL.Classes.NoteModel note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/Save", ReplyAction="http://tempuri.org/INote/SaveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveAsync(MODEL.Classes.NoteModel note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/Note_Remove", ReplyAction="http://tempuri.org/INote/Note_RemoveResponse")]
        MODEL.Classes.MessageModel Note_Remove(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/Note_Remove", ReplyAction="http://tempuri.org/INote/Note_RemoveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Note_RemoveAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/Get_UserNotes", ReplyAction="http://tempuri.org/INote/Get_UserNotesResponse")]
        MODEL.Classes.NoteModel[] Get_UserNotes(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/Get_UserNotes", ReplyAction="http://tempuri.org/INote/Get_UserNotesResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.NoteModel[]> Get_UserNotesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/Note_Search", ReplyAction="http://tempuri.org/INote/Note_SearchResponse")]
        MODEL.Classes.NoteModel[] Note_Search(MODEL.Classes.NoteFilterModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/Note_Search", ReplyAction="http://tempuri.org/INote/Note_SearchResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.NoteModel[]> Note_SearchAsync(MODEL.Classes.NoteFilterModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/GetAuthorizedHours", ReplyAction="http://tempuri.org/INote/GetAuthorizedHoursResponse")]
        MODEL.Classes.AuthorizedHoursModel[] GetAuthorizedHours();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/GetAuthorizedHours", ReplyAction="http://tempuri.org/INote/GetAuthorizedHoursResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.AuthorizedHoursModel[]> GetAuthorizedHoursAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/GetAuthorizedHoursByCollaborator", ReplyAction="http://tempuri.org/INote/GetAuthorizedHoursByCollaboratorResponse")]
        MODEL.Classes.AuthorizedHoursModel[] GetAuthorizedHoursByCollaborator(int collaboratorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INote/GetAuthorizedHoursByCollaborator", ReplyAction="http://tempuri.org/INote/GetAuthorizedHoursByCollaboratorResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.AuthorizedHoursModel[]> GetAuthorizedHoursByCollaboratorAsync(int collaboratorId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INoteChannel : CVAGestaoLayout.CVAGestaoService.INote, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoteClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.INote>, CVAGestaoLayout.CVAGestaoService.INote {
        
        public NoteClient() {
        }
        
        public NoteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NoteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NoteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel Save(MODEL.Classes.NoteModel note) {
            return base.Channel.Save(note);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveAsync(MODEL.Classes.NoteModel note) {
            return base.Channel.SaveAsync(note);
        }
        
        public MODEL.Classes.MessageModel Note_Remove(int id) {
            return base.Channel.Note_Remove(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Note_RemoveAsync(int id) {
            return base.Channel.Note_RemoveAsync(id);
        }
        
        public MODEL.Classes.NoteModel[] Get_UserNotes(int id) {
            return base.Channel.Get_UserNotes(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.NoteModel[]> Get_UserNotesAsync(int id) {
            return base.Channel.Get_UserNotesAsync(id);
        }
        
        public MODEL.Classes.NoteModel[] Note_Search(MODEL.Classes.NoteFilterModel model) {
            return base.Channel.Note_Search(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.NoteModel[]> Note_SearchAsync(MODEL.Classes.NoteFilterModel model) {
            return base.Channel.Note_SearchAsync(model);
        }
        
        public MODEL.Classes.AuthorizedHoursModel[] GetAuthorizedHours() {
            return base.Channel.GetAuthorizedHours();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.AuthorizedHoursModel[]> GetAuthorizedHoursAsync() {
            return base.Channel.GetAuthorizedHoursAsync();
        }
        
        public MODEL.Classes.AuthorizedHoursModel[] GetAuthorizedHoursByCollaborator(int collaboratorId) {
            return base.Channel.GetAuthorizedHoursByCollaborator(collaboratorId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.AuthorizedHoursModel[]> GetAuthorizedHoursByCollaboratorAsync(int collaboratorId) {
            return base.Channel.GetAuthorizedHoursByCollaboratorAsync(collaboratorId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IPercentProject")]
    public interface IPercentProject {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPercentProject/GetPercentProject", ReplyAction="http://tempuri.org/IPercentProject/GetPercentProjectResponse")]
        MODEL.Classes.PercentProjectModel[] GetPercentProject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPercentProject/GetPercentProject", ReplyAction="http://tempuri.org/IPercentProject/GetPercentProjectResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.PercentProjectModel[]> GetPercentProjectAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPercentProjectChannel : CVAGestaoLayout.CVAGestaoService.IPercentProject, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PercentProjectClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IPercentProject>, CVAGestaoLayout.CVAGestaoService.IPercentProject {
        
        public PercentProjectClient() {
        }
        
        public PercentProjectClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PercentProjectClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PercentProjectClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PercentProjectClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.PercentProjectModel[] GetPercentProject() {
            return base.Channel.GetPercentProject();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.PercentProjectModel[]> GetPercentProjectAsync() {
            return base.Channel.GetPercentProjectAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IExpenseType")]
    public interface IExpenseType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/SaveExpenseType", ReplyAction="http://tempuri.org/IExpenseType/SaveExpenseTypeResponse")]
        MODEL.Classes.MessageModel SaveExpenseType(MODEL.Classes.ExpenseTypeModel expenseType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/SaveExpenseType", ReplyAction="http://tempuri.org/IExpenseType/SaveExpenseTypeResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveExpenseTypeAsync(MODEL.Classes.ExpenseTypeModel expenseType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/ExpenseTypeStatus", ReplyAction="http://tempuri.org/IExpenseType/ExpenseTypeStatusResponse")]
        MODEL.Classes.StatusModel[] ExpenseTypeStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/ExpenseTypeStatus", ReplyAction="http://tempuri.org/IExpenseType/ExpenseTypeStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> ExpenseTypeStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/GetExpenseTypes", ReplyAction="http://tempuri.org/IExpenseType/GetExpenseTypesResponse")]
        MODEL.Classes.ExpenseTypeModel[] GetExpenseTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/GetExpenseTypes", ReplyAction="http://tempuri.org/IExpenseType/GetExpenseTypesResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ExpenseTypeModel[]> GetExpenseTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/GetAllExpenseTypes", ReplyAction="http://tempuri.org/IExpenseType/GetAllExpenseTypesResponse")]
        MODEL.Classes.ExpenseTypeModel[] GetAllExpenseTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/GetAllExpenseTypes", ReplyAction="http://tempuri.org/IExpenseType/GetAllExpenseTypesResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ExpenseTypeModel[]> GetAllExpenseTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/GetExpenseType", ReplyAction="http://tempuri.org/IExpenseType/GetExpenseTypeResponse")]
        MODEL.Classes.ExpenseTypeModel GetExpenseType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExpenseType/GetExpenseType", ReplyAction="http://tempuri.org/IExpenseType/GetExpenseTypeResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ExpenseTypeModel> GetExpenseTypeAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExpenseTypeChannel : CVAGestaoLayout.CVAGestaoService.IExpenseType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExpenseTypeClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IExpenseType>, CVAGestaoLayout.CVAGestaoService.IExpenseType {
        
        public ExpenseTypeClient() {
        }
        
        public ExpenseTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExpenseTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpenseTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpenseTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel SaveExpenseType(MODEL.Classes.ExpenseTypeModel expenseType) {
            return base.Channel.SaveExpenseType(expenseType);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveExpenseTypeAsync(MODEL.Classes.ExpenseTypeModel expenseType) {
            return base.Channel.SaveExpenseTypeAsync(expenseType);
        }
        
        public MODEL.Classes.StatusModel[] ExpenseTypeStatus() {
            return base.Channel.ExpenseTypeStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> ExpenseTypeStatusAsync() {
            return base.Channel.ExpenseTypeStatusAsync();
        }
        
        public MODEL.Classes.ExpenseTypeModel[] GetExpenseTypes() {
            return base.Channel.GetExpenseTypes();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ExpenseTypeModel[]> GetExpenseTypesAsync() {
            return base.Channel.GetExpenseTypesAsync();
        }
        
        public MODEL.Classes.ExpenseTypeModel[] GetAllExpenseTypes() {
            return base.Channel.GetAllExpenseTypes();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ExpenseTypeModel[]> GetAllExpenseTypesAsync() {
            return base.Channel.GetAllExpenseTypesAsync();
        }
        
        public MODEL.Classes.ExpenseTypeModel GetExpenseType(int id) {
            return base.Channel.GetExpenseType(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ExpenseTypeModel> GetExpenseTypeAsync(int id) {
            return base.Channel.GetExpenseTypeAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IPoliticExpense")]
    public interface IPoliticExpense {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoliticExpense/GetPoliticExpenseByProject", ReplyAction="http://tempuri.org/IPoliticExpense/GetPoliticExpenseByProjectResponse")]
        MODEL.Classes.PoliticExpenseModel[] GetPoliticExpenseByProject(int projectId, int user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPoliticExpense/GetPoliticExpenseByProject", ReplyAction="http://tempuri.org/IPoliticExpense/GetPoliticExpenseByProjectResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.PoliticExpenseModel[]> GetPoliticExpenseByProjectAsync(int projectId, int user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPoliticExpenseChannel : CVAGestaoLayout.CVAGestaoService.IPoliticExpense, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PoliticExpenseClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IPoliticExpense>, CVAGestaoLayout.CVAGestaoService.IPoliticExpense {
        
        public PoliticExpenseClient() {
        }
        
        public PoliticExpenseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PoliticExpenseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PoliticExpenseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PoliticExpenseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.PoliticExpenseModel[] GetPoliticExpenseByProject(int projectId, int user) {
            return base.Channel.GetPoliticExpenseByProject(projectId, user);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.PoliticExpenseModel[]> GetPoliticExpenseByProjectAsync(int projectId, int user) {
            return base.Channel.GetPoliticExpenseByProjectAsync(projectId, user);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IUnitMeter")]
    public interface IUnitMeter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeter/GetUnitMeter", ReplyAction="http://tempuri.org/IUnitMeter/GetUnitMeterResponse")]
        MODEL.Classes.UnitMeterModel[] GetUnitMeter();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeter/GetUnitMeter", ReplyAction="http://tempuri.org/IUnitMeter/GetUnitMeterResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.UnitMeterModel[]> GetUnitMeterAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUnitMeterChannel : CVAGestaoLayout.CVAGestaoService.IUnitMeter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnitMeterClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IUnitMeter>, CVAGestaoLayout.CVAGestaoService.IUnitMeter {
        
        public UnitMeterClient() {
        }
        
        public UnitMeterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnitMeterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitMeterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitMeterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.UnitMeterModel[] GetUnitMeter() {
            return base.Channel.GetUnitMeter();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.UnitMeterModel[]> GetUnitMeterAsync() {
            return base.Channel.GetUnitMeterAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IProfile")]
    public interface IProfile {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfile/SaveProfile", ReplyAction="http://tempuri.org/IProfile/SaveProfileResponse")]
        MODEL.Classes.MessageModel SaveProfile(MODEL.Classes.ProfileModel profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfile/SaveProfile", ReplyAction="http://tempuri.org/IProfile/SaveProfileResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveProfileAsync(MODEL.Classes.ProfileModel profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfile/ProfileGetStatus", ReplyAction="http://tempuri.org/IProfile/ProfileGetStatusResponse")]
        MODEL.Classes.StatusModel[] ProfileGetStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfile/ProfileGetStatus", ReplyAction="http://tempuri.org/IProfile/ProfileGetStatusResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> ProfileGetStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfile/GetProfiles", ReplyAction="http://tempuri.org/IProfile/GetProfilesResponse")]
        MODEL.Classes.ProfileModel[] GetProfiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfile/GetProfiles", ReplyAction="http://tempuri.org/IProfile/GetProfilesResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProfileModel[]> GetProfilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfile/GetProfile_ByID", ReplyAction="http://tempuri.org/IProfile/GetProfile_ByIDResponse")]
        MODEL.Classes.ProfileModel GetProfile_ByID(int profileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfile/GetProfile_ByID", ReplyAction="http://tempuri.org/IProfile/GetProfile_ByIDResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProfileModel> GetProfile_ByIDAsync(int profileID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfileChannel : CVAGestaoLayout.CVAGestaoService.IProfile, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfileClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IProfile>, CVAGestaoLayout.CVAGestaoService.IProfile {
        
        public ProfileClient() {
        }
        
        public ProfileClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfileClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel SaveProfile(MODEL.Classes.ProfileModel profile) {
            return base.Channel.SaveProfile(profile);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveProfileAsync(MODEL.Classes.ProfileModel profile) {
            return base.Channel.SaveProfileAsync(profile);
        }
        
        public MODEL.Classes.StatusModel[] ProfileGetStatus() {
            return base.Channel.ProfileGetStatus();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusModel[]> ProfileGetStatusAsync() {
            return base.Channel.ProfileGetStatusAsync();
        }
        
        public MODEL.Classes.ProfileModel[] GetProfiles() {
            return base.Channel.GetProfiles();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProfileModel[]> GetProfilesAsync() {
            return base.Channel.GetProfilesAsync();
        }
        
        public MODEL.Classes.ProfileModel GetProfile_ByID(int profileID) {
            return base.Channel.GetProfile_ByID(profileID);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProfileModel> GetProfile_ByIDAsync(int profileID) {
            return base.Channel.GetProfile_ByIDAsync(profileID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IUserView")]
    public interface IUserView {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserView/GetUserView", ReplyAction="http://tempuri.org/IUserView/GetUserViewResponse")]
        MODEL.Classes.UserViewModel[] GetUserView();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserView/GetUserView", ReplyAction="http://tempuri.org/IUserView/GetUserViewResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.UserViewModel[]> GetUserViewAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserViewChannel : CVAGestaoLayout.CVAGestaoService.IUserView, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserViewClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IUserView>, CVAGestaoLayout.CVAGestaoService.IUserView {
        
        public UserViewClient() {
        }
        
        public UserViewClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserViewClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserViewClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserViewClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.UserViewModel[] GetUserView() {
            return base.Channel.GetUserView();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.UserViewModel[]> GetUserViewAsync() {
            return base.Channel.GetUserViewAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IPeriod")]
    public interface IPeriod {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/OpenPeriod", ReplyAction="http://tempuri.org/IPeriod/OpenPeriodResponse")]
        MODEL.Classes.MessageModel OpenPeriod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/OpenPeriod", ReplyAction="http://tempuri.org/IPeriod/OpenPeriodResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> OpenPeriodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/SaveSubPeriod", ReplyAction="http://tempuri.org/IPeriod/SaveSubPeriodResponse")]
        MODEL.Classes.MessageModel SaveSubPeriod(MODEL.Classes.SubPeriodModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/SaveSubPeriod", ReplyAction="http://tempuri.org/IPeriod/SaveSubPeriodResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveSubPeriodAsync(MODEL.Classes.SubPeriodModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/GetSubPeriods", ReplyAction="http://tempuri.org/IPeriod/GetSubPeriodsResponse")]
        MODEL.Classes.SubPeriodModel[] GetSubPeriods(System.Nullable<int> colId, System.Nullable<int> clientId, System.Nullable<int> projectId, System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/GetSubPeriods", ReplyAction="http://tempuri.org/IPeriod/GetSubPeriodsResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.SubPeriodModel[]> GetSubPeriodsAsync(System.Nullable<int> colId, System.Nullable<int> clientId, System.Nullable<int> projectId, System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/SetStatusSubPeriod", ReplyAction="http://tempuri.org/IPeriod/SetStatusSubPeriodResponse")]
        MODEL.Classes.MessageModel SetStatusSubPeriod(int periodId, int statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/SetStatusSubPeriod", ReplyAction="http://tempuri.org/IPeriod/SetStatusSubPeriodResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SetStatusSubPeriodAsync(int periodId, int statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/SetStatusSubPeriodList", ReplyAction="http://tempuri.org/IPeriod/SetStatusSubPeriodListResponse")]
        MODEL.Classes.MessageModel SetStatusSubPeriodList(string periodIdList, int statusId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPeriod/SetStatusSubPeriodList", ReplyAction="http://tempuri.org/IPeriod/SetStatusSubPeriodListResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SetStatusSubPeriodListAsync(string periodIdList, int statusId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPeriodChannel : CVAGestaoLayout.CVAGestaoService.IPeriod, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PeriodClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IPeriod>, CVAGestaoLayout.CVAGestaoService.IPeriod {
        
        public PeriodClient() {
        }
        
        public PeriodClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PeriodClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PeriodClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PeriodClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel OpenPeriod() {
            return base.Channel.OpenPeriod();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> OpenPeriodAsync() {
            return base.Channel.OpenPeriodAsync();
        }
        
        public MODEL.Classes.MessageModel SaveSubPeriod(MODEL.Classes.SubPeriodModel model) {
            return base.Channel.SaveSubPeriod(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SaveSubPeriodAsync(MODEL.Classes.SubPeriodModel model) {
            return base.Channel.SaveSubPeriodAsync(model);
        }
        
        public MODEL.Classes.SubPeriodModel[] GetSubPeriods(System.Nullable<int> colId, System.Nullable<int> clientId, System.Nullable<int> projectId, System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo) {
            return base.Channel.GetSubPeriods(colId, clientId, projectId, dateFrom, dateTo);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.SubPeriodModel[]> GetSubPeriodsAsync(System.Nullable<int> colId, System.Nullable<int> clientId, System.Nullable<int> projectId, System.Nullable<System.DateTime> dateFrom, System.Nullable<System.DateTime> dateTo) {
            return base.Channel.GetSubPeriodsAsync(colId, clientId, projectId, dateFrom, dateTo);
        }
        
        public MODEL.Classes.MessageModel SetStatusSubPeriod(int periodId, int statusId) {
            return base.Channel.SetStatusSubPeriod(periodId, statusId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SetStatusSubPeriodAsync(int periodId, int statusId) {
            return base.Channel.SetStatusSubPeriodAsync(periodId, statusId);
        }
        
        public MODEL.Classes.MessageModel SetStatusSubPeriodList(string periodIdList, int statusId) {
            return base.Channel.SetStatusSubPeriodList(periodIdList, statusId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SetStatusSubPeriodListAsync(string periodIdList, int statusId) {
            return base.Channel.SetStatusSubPeriodListAsync(periodIdList, statusId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IAMSTicket")]
    public interface IAMSTicket {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAMSTicket/GetTicketsByProject", ReplyAction="http://tempuri.org/IAMSTicket/GetTicketsByProjectResponse")]
        MODEL.Classes.AMSTicketModel[] GetTicketsByProject(int projectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAMSTicket/GetTicketsByProject", ReplyAction="http://tempuri.org/IAMSTicket/GetTicketsByProjectResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.AMSTicketModel[]> GetTicketsByProjectAsync(int projectId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAMSTicketChannel : CVAGestaoLayout.CVAGestaoService.IAMSTicket, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AMSTicketClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IAMSTicket>, CVAGestaoLayout.CVAGestaoService.IAMSTicket {
        
        public AMSTicketClient() {
        }
        
        public AMSTicketClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AMSTicketClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AMSTicketClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AMSTicketClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.AMSTicketModel[] GetTicketsByProject(int projectId) {
            return base.Channel.GetTicketsByProject(projectId);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.AMSTicketModel[]> GetTicketsByProjectAsync(int projectId) {
            return base.Channel.GetTicketsByProjectAsync(projectId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IEmailSender")]
    public interface IEmailSender {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailSender/SendEmail", ReplyAction="http://tempuri.org/IEmailSender/SendEmailResponse")]
        MODEL.Classes.MessageModel SendEmail(string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailSender/SendEmail", ReplyAction="http://tempuri.org/IEmailSender/SendEmailResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SendEmailAsync(string emailAddress);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailSenderChannel : CVAGestaoLayout.CVAGestaoService.IEmailSender, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailSenderClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IEmailSender>, CVAGestaoLayout.CVAGestaoService.IEmailSender {
        
        public EmailSenderClient() {
        }
        
        public EmailSenderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailSenderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailSenderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailSenderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.MessageModel SendEmail(string emailAddress) {
            return base.Channel.SendEmail(emailAddress);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> SendEmailAsync(string emailAddress) {
            return base.Channel.SendEmailAsync(emailAddress);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IProjectType")]
    public interface IProjectType {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Get", ReplyAction="http://tempuri.org/IProjectType/ProjectType_GetResponse")]
        MODEL.Classes.ProjectTypeModel ProjectType_Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Get", ReplyAction="http://tempuri.org/IProjectType/ProjectType_GetResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectTypeModel> ProjectType_GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Get_All", ReplyAction="http://tempuri.org/IProjectType/ProjectType_Get_AllResponse")]
        MODEL.Classes.ProjectTypeModel[] ProjectType_Get_All();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Get_All", ReplyAction="http://tempuri.org/IProjectType/ProjectType_Get_AllResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectTypeModel[]> ProjectType_Get_AllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Insert", ReplyAction="http://tempuri.org/IProjectType/ProjectType_InsertResponse")]
        MODEL.Classes.MessageModel ProjectType_Insert(MODEL.Classes.ProjectTypeModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Insert", ReplyAction="http://tempuri.org/IProjectType/ProjectType_InsertResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ProjectType_InsertAsync(MODEL.Classes.ProjectTypeModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Update", ReplyAction="http://tempuri.org/IProjectType/ProjectType_UpdateResponse")]
        MODEL.Classes.MessageModel ProjectType_Update(MODEL.Classes.ProjectTypeModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Update", ReplyAction="http://tempuri.org/IProjectType/ProjectType_UpdateResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ProjectType_UpdateAsync(MODEL.Classes.ProjectTypeModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Remove", ReplyAction="http://tempuri.org/IProjectType/ProjectType_RemoveResponse")]
        MODEL.Classes.MessageModel ProjectType_Remove(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectType/ProjectType_Remove", ReplyAction="http://tempuri.org/IProjectType/ProjectType_RemoveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ProjectType_RemoveAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectTypeChannel : CVAGestaoLayout.CVAGestaoService.IProjectType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectTypeClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IProjectType>, CVAGestaoLayout.CVAGestaoService.IProjectType {
        
        public ProjectTypeClient() {
        }
        
        public ProjectTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.ProjectTypeModel ProjectType_Get(int id) {
            return base.Channel.ProjectType_Get(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectTypeModel> ProjectType_GetAsync(int id) {
            return base.Channel.ProjectType_GetAsync(id);
        }
        
        public MODEL.Classes.ProjectTypeModel[] ProjectType_Get_All() {
            return base.Channel.ProjectType_Get_All();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectTypeModel[]> ProjectType_Get_AllAsync() {
            return base.Channel.ProjectType_Get_AllAsync();
        }
        
        public MODEL.Classes.MessageModel ProjectType_Insert(MODEL.Classes.ProjectTypeModel model) {
            return base.Channel.ProjectType_Insert(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ProjectType_InsertAsync(MODEL.Classes.ProjectTypeModel model) {
            return base.Channel.ProjectType_InsertAsync(model);
        }
        
        public MODEL.Classes.MessageModel ProjectType_Update(MODEL.Classes.ProjectTypeModel model) {
            return base.Channel.ProjectType_Update(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ProjectType_UpdateAsync(MODEL.Classes.ProjectTypeModel model) {
            return base.Channel.ProjectType_UpdateAsync(model);
        }
        
        public MODEL.Classes.MessageModel ProjectType_Remove(int id) {
            return base.Channel.ProjectType_Remove(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ProjectType_RemoveAsync(int id) {
            return base.Channel.ProjectType_RemoveAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IPricing")]
    public interface IPricing {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Get", ReplyAction="http://tempuri.org/IPricing/Pricing_GetResponse")]
        MODEL.Classes.PricingModel Pricing_Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Get", ReplyAction="http://tempuri.org/IPricing/Pricing_GetResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.PricingModel> Pricing_GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Get_Info", ReplyAction="http://tempuri.org/IPricing/Pricing_Get_InfoResponse")]
        MODEL.Classes.PricingModel Pricing_Get_Info(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Get_Info", ReplyAction="http://tempuri.org/IPricing/Pricing_Get_InfoResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.PricingModel> Pricing_Get_InfoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Get_By_Project", ReplyAction="http://tempuri.org/IPricing/Pricing_Get_By_ProjectResponse")]
        MODEL.Classes.PricingModel Pricing_Get_By_Project(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Get_By_Project", ReplyAction="http://tempuri.org/IPricing/Pricing_Get_By_ProjectResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.PricingModel> Pricing_Get_By_ProjectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Get_By_Opportunitty", ReplyAction="http://tempuri.org/IPricing/Pricing_Get_By_OpportunittyResponse")]
        MODEL.Classes.PricingModel Pricing_Get_By_Opportunitty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Get_By_Opportunitty", ReplyAction="http://tempuri.org/IPricing/Pricing_Get_By_OpportunittyResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.PricingModel> Pricing_Get_By_OpportunittyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Insert", ReplyAction="http://tempuri.org/IPricing/Pricing_InsertResponse")]
        MODEL.Classes.MessageModel Pricing_Insert(MODEL.Classes.PricingModel model, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Insert", ReplyAction="http://tempuri.org/IPricing/Pricing_InsertResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Pricing_InsertAsync(MODEL.Classes.PricingModel model, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Update", ReplyAction="http://tempuri.org/IPricing/Pricing_UpdateResponse")]
        MODEL.Classes.MessageModel Pricing_Update(MODEL.Classes.PricingModel model, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Update", ReplyAction="http://tempuri.org/IPricing/Pricing_UpdateResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Pricing_UpdateAsync(MODEL.Classes.PricingModel model, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Opportunitty_Insert", ReplyAction="http://tempuri.org/IPricing/Pricing_Opportunitty_InsertResponse")]
        MODEL.Classes.MessageModel Pricing_Opportunitty_Insert(MODEL.Classes.PricingModel model, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Opportunitty_Insert", ReplyAction="http://tempuri.org/IPricing/Pricing_Opportunitty_InsertResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Pricing_Opportunitty_InsertAsync(MODEL.Classes.PricingModel model, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Opportunitty_Update", ReplyAction="http://tempuri.org/IPricing/Pricing_Opportunitty_UpdateResponse")]
        MODEL.Classes.MessageModel Pricing_Opportunitty_Update(MODEL.Classes.PricingModel model, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPricing/Pricing_Opportunitty_Update", ReplyAction="http://tempuri.org/IPricing/Pricing_Opportunitty_UpdateResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Pricing_Opportunitty_UpdateAsync(MODEL.Classes.PricingModel model, int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPricingChannel : CVAGestaoLayout.CVAGestaoService.IPricing, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PricingClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IPricing>, CVAGestaoLayout.CVAGestaoService.IPricing {
        
        public PricingClient() {
        }
        
        public PricingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PricingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PricingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PricingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.PricingModel Pricing_Get(int id) {
            return base.Channel.Pricing_Get(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.PricingModel> Pricing_GetAsync(int id) {
            return base.Channel.Pricing_GetAsync(id);
        }
        
        public MODEL.Classes.PricingModel Pricing_Get_Info(int id) {
            return base.Channel.Pricing_Get_Info(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.PricingModel> Pricing_Get_InfoAsync(int id) {
            return base.Channel.Pricing_Get_InfoAsync(id);
        }
        
        public MODEL.Classes.PricingModel Pricing_Get_By_Project(int id) {
            return base.Channel.Pricing_Get_By_Project(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.PricingModel> Pricing_Get_By_ProjectAsync(int id) {
            return base.Channel.Pricing_Get_By_ProjectAsync(id);
        }
        
        public MODEL.Classes.PricingModel Pricing_Get_By_Opportunitty(int id) {
            return base.Channel.Pricing_Get_By_Opportunitty(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.PricingModel> Pricing_Get_By_OpportunittyAsync(int id) {
            return base.Channel.Pricing_Get_By_OpportunittyAsync(id);
        }
        
        public MODEL.Classes.MessageModel Pricing_Insert(MODEL.Classes.PricingModel model, int id) {
            return base.Channel.Pricing_Insert(model, id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Pricing_InsertAsync(MODEL.Classes.PricingModel model, int id) {
            return base.Channel.Pricing_InsertAsync(model, id);
        }
        
        public MODEL.Classes.MessageModel Pricing_Update(MODEL.Classes.PricingModel model, int id) {
            return base.Channel.Pricing_Update(model, id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Pricing_UpdateAsync(MODEL.Classes.PricingModel model, int id) {
            return base.Channel.Pricing_UpdateAsync(model, id);
        }
        
        public MODEL.Classes.MessageModel Pricing_Opportunitty_Insert(MODEL.Classes.PricingModel model, int id) {
            return base.Channel.Pricing_Opportunitty_Insert(model, id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Pricing_Opportunitty_InsertAsync(MODEL.Classes.PricingModel model, int id) {
            return base.Channel.Pricing_Opportunitty_InsertAsync(model, id);
        }
        
        public MODEL.Classes.MessageModel Pricing_Opportunitty_Update(MODEL.Classes.PricingModel model, int id) {
            return base.Channel.Pricing_Opportunitty_Update(model, id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> Pricing_Opportunitty_UpdateAsync(MODEL.Classes.PricingModel model, int id) {
            return base.Channel.Pricing_Opportunitty_UpdateAsync(model, id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IProjectParameters")]
    public interface IProjectParameters {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectParameters/ProjectParameters_Get_All", ReplyAction="http://tempuri.org/IProjectParameters/ProjectParameters_Get_AllResponse")]
        MODEL.Classes.ProjectParametersModel[] ProjectParameters_Get_All();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectParameters/ProjectParameters_Get_All", ReplyAction="http://tempuri.org/IProjectParameters/ProjectParameters_Get_AllResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ProjectParametersModel[]> ProjectParameters_Get_AllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectParameters/ProjectParameters_Save", ReplyAction="http://tempuri.org/IProjectParameters/ProjectParameters_SaveResponse")]
        MODEL.Classes.MessageModel ProjectParameters_Save(MODEL.Classes.ProjectParametersModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProjectParameters/ProjectParameters_Save", ReplyAction="http://tempuri.org/IProjectParameters/ProjectParameters_SaveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ProjectParameters_SaveAsync(MODEL.Classes.ProjectParametersModel model);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProjectParametersChannel : CVAGestaoLayout.CVAGestaoService.IProjectParameters, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectParametersClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IProjectParameters>, CVAGestaoLayout.CVAGestaoService.IProjectParameters {
        
        public ProjectParametersClient() {
        }
        
        public ProjectParametersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectParametersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectParametersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectParametersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.ProjectParametersModel[] ProjectParameters_Get_All() {
            return base.Channel.ProjectParameters_Get_All();
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ProjectParametersModel[]> ProjectParameters_Get_AllAsync() {
            return base.Channel.ProjectParameters_Get_AllAsync();
        }
        
        public MODEL.Classes.MessageModel ProjectParameters_Save(MODEL.Classes.ProjectParametersModel model) {
            return base.Channel.ProjectParameters_Save(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ProjectParameters_SaveAsync(MODEL.Classes.ProjectParametersModel model) {
            return base.Channel.ProjectParameters_SaveAsync(model);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IStatusReport")]
    public interface IStatusReport {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusReport/StatusReport_Get_ParcialHours", ReplyAction="http://tempuri.org/IStatusReport/StatusReport_Get_ParcialHoursResponse")]
        string[] StatusReport_Get_ParcialHours(int id, System.DateTime data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusReport/StatusReport_Get_ParcialHours", ReplyAction="http://tempuri.org/IStatusReport/StatusReport_Get_ParcialHoursResponse")]
        System.Threading.Tasks.Task<string[]> StatusReport_Get_ParcialHoursAsync(int id, System.DateTime data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusReport/StatusReport_Save", ReplyAction="http://tempuri.org/IStatusReport/StatusReport_SaveResponse")]
        MODEL.Classes.MessageModel StatusReport_Save(MODEL.Classes.StatusReportModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusReport/StatusReport_Save", ReplyAction="http://tempuri.org/IStatusReport/StatusReport_SaveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> StatusReport_SaveAsync(MODEL.Classes.StatusReportModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusReport/StatusReport_Get_All", ReplyAction="http://tempuri.org/IStatusReport/StatusReport_Get_AllResponse")]
        MODEL.Classes.StatusReportModel[] StatusReport_Get_All(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusReport/StatusReport_Get_All", ReplyAction="http://tempuri.org/IStatusReport/StatusReport_Get_AllResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.StatusReportModel[]> StatusReport_Get_AllAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatusReportChannel : CVAGestaoLayout.CVAGestaoService.IStatusReport, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatusReportClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IStatusReport>, CVAGestaoLayout.CVAGestaoService.IStatusReport {
        
        public StatusReportClient() {
        }
        
        public StatusReportClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatusReportClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusReportClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusReportClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] StatusReport_Get_ParcialHours(int id, System.DateTime data) {
            return base.Channel.StatusReport_Get_ParcialHours(id, data);
        }
        
        public System.Threading.Tasks.Task<string[]> StatusReport_Get_ParcialHoursAsync(int id, System.DateTime data) {
            return base.Channel.StatusReport_Get_ParcialHoursAsync(id, data);
        }
        
        public MODEL.Classes.MessageModel StatusReport_Save(MODEL.Classes.StatusReportModel model) {
            return base.Channel.StatusReport_Save(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> StatusReport_SaveAsync(MODEL.Classes.StatusReportModel model) {
            return base.Channel.StatusReport_SaveAsync(model);
        }
        
        public MODEL.Classes.StatusReportModel[] StatusReport_Get_All(int id) {
            return base.Channel.StatusReport_Get_All(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.StatusReportModel[]> StatusReport_Get_AllAsync(int id) {
            return base.Channel.StatusReport_Get_AllAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IChangeRequest")]
    public interface IChangeRequest {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChangeRequest/ChangeRequest_Get", ReplyAction="http://tempuri.org/IChangeRequest/ChangeRequest_GetResponse")]
        MODEL.Classes.ChangeRequestModel ChangeRequest_Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChangeRequest/ChangeRequest_Get", ReplyAction="http://tempuri.org/IChangeRequest/ChangeRequest_GetResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ChangeRequestModel> ChangeRequest_GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChangeRequest/ChangeRequest_Get_for_Project", ReplyAction="http://tempuri.org/IChangeRequest/ChangeRequest_Get_for_ProjectResponse")]
        MODEL.Classes.ChangeRequestModel[] ChangeRequest_Get_for_Project(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChangeRequest/ChangeRequest_Get_for_Project", ReplyAction="http://tempuri.org/IChangeRequest/ChangeRequest_Get_for_ProjectResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.ChangeRequestModel[]> ChangeRequest_Get_for_ProjectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChangeRequest/ChangeRequest_Save", ReplyAction="http://tempuri.org/IChangeRequest/ChangeRequest_SaveResponse")]
        MODEL.Classes.MessageModel ChangeRequest_Save(MODEL.Classes.ChangeRequestModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChangeRequest/ChangeRequest_Save", ReplyAction="http://tempuri.org/IChangeRequest/ChangeRequest_SaveResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ChangeRequest_SaveAsync(MODEL.Classes.ChangeRequestModel model);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChangeRequestChannel : CVAGestaoLayout.CVAGestaoService.IChangeRequest, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeRequestClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IChangeRequest>, CVAGestaoLayout.CVAGestaoService.IChangeRequest {
        
        public ChangeRequestClient() {
        }
        
        public ChangeRequestClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChangeRequestClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChangeRequestClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChangeRequestClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.ChangeRequestModel ChangeRequest_Get(int id) {
            return base.Channel.ChangeRequest_Get(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ChangeRequestModel> ChangeRequest_GetAsync(int id) {
            return base.Channel.ChangeRequest_GetAsync(id);
        }
        
        public MODEL.Classes.ChangeRequestModel[] ChangeRequest_Get_for_Project(int id) {
            return base.Channel.ChangeRequest_Get_for_Project(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.ChangeRequestModel[]> ChangeRequest_Get_for_ProjectAsync(int id) {
            return base.Channel.ChangeRequest_Get_for_ProjectAsync(id);
        }
        
        public MODEL.Classes.MessageModel ChangeRequest_Save(MODEL.Classes.ChangeRequestModel model) {
            return base.Channel.ChangeRequest_Save(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> ChangeRequest_SaveAsync(MODEL.Classes.ChangeRequestModel model) {
            return base.Channel.ChangeRequest_SaveAsync(model);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CVAGestaoService.IAuthorization")]
    public interface IAuthorization {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/Get_DiasAutorizados", ReplyAction="http://tempuri.org/IAuthorization/Get_DiasAutorizadosResponse")]
        MODEL.Classes.AuthorizedDayModel[] Get_DiasAutorizados(int idCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/Get_DiasAutorizados", ReplyAction="http://tempuri.org/IAuthorization/Get_DiasAutorizadosResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.AuthorizedDayModel[]> Get_DiasAutorizadosAsync(int idCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/AddDiaAutorizado", ReplyAction="http://tempuri.org/IAuthorization/AddDiaAutorizadoResponse")]
        MODEL.Classes.MessageModel AddDiaAutorizado(MODEL.Classes.AuthorizedDayModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/AddDiaAutorizado", ReplyAction="http://tempuri.org/IAuthorization/AddDiaAutorizadoResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> AddDiaAutorizadoAsync(MODEL.Classes.AuthorizedDayModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/RemoveDiaAutorizado", ReplyAction="http://tempuri.org/IAuthorization/RemoveDiaAutorizadoResponse")]
        MODEL.Classes.MessageModel RemoveDiaAutorizado(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/RemoveDiaAutorizado", ReplyAction="http://tempuri.org/IAuthorization/RemoveDiaAutorizadoResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> RemoveDiaAutorizadoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/Get_HorasAutorizadas", ReplyAction="http://tempuri.org/IAuthorization/Get_HorasAutorizadasResponse")]
        MODEL.Classes.AuthorizedHoursModel[] Get_HorasAutorizadas(int idCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/Get_HorasAutorizadas", ReplyAction="http://tempuri.org/IAuthorization/Get_HorasAutorizadasResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.AuthorizedHoursModel[]> Get_HorasAutorizadasAsync(int idCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/AddHorasAutorizadas", ReplyAction="http://tempuri.org/IAuthorization/AddHorasAutorizadasResponse")]
        MODEL.Classes.MessageModel AddHorasAutorizadas(MODEL.Classes.AuthorizedHoursModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/AddHorasAutorizadas", ReplyAction="http://tempuri.org/IAuthorization/AddHorasAutorizadasResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> AddHorasAutorizadasAsync(MODEL.Classes.AuthorizedHoursModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/RemoveHorasAutorizadas", ReplyAction="http://tempuri.org/IAuthorization/RemoveHorasAutorizadasResponse")]
        MODEL.Classes.MessageModel RemoveHorasAutorizadas(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/RemoveHorasAutorizadas", ReplyAction="http://tempuri.org/IAuthorization/RemoveHorasAutorizadasResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> RemoveHorasAutorizadasAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/Get_LimiteHoras", ReplyAction="http://tempuri.org/IAuthorization/Get_LimiteHorasResponse")]
        MODEL.Classes.HoursLimitModel[] Get_LimiteHoras(int idCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/Get_LimiteHoras", ReplyAction="http://tempuri.org/IAuthorization/Get_LimiteHorasResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.HoursLimitModel[]> Get_LimiteHorasAsync(int idCol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/AddLimiteHoras", ReplyAction="http://tempuri.org/IAuthorization/AddLimiteHorasResponse")]
        MODEL.Classes.MessageModel AddLimiteHoras(MODEL.Classes.HoursLimitModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/AddLimiteHoras", ReplyAction="http://tempuri.org/IAuthorization/AddLimiteHorasResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> AddLimiteHorasAsync(MODEL.Classes.HoursLimitModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/RemoveLimiteHoras", ReplyAction="http://tempuri.org/IAuthorization/RemoveLimiteHorasResponse")]
        MODEL.Classes.MessageModel RemoveLimiteHoras(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorization/RemoveLimiteHoras", ReplyAction="http://tempuri.org/IAuthorization/RemoveLimiteHorasResponse")]
        System.Threading.Tasks.Task<MODEL.Classes.MessageModel> RemoveLimiteHorasAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorizationChannel : CVAGestaoLayout.CVAGestaoService.IAuthorization, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizationClient : System.ServiceModel.ClientBase<CVAGestaoLayout.CVAGestaoService.IAuthorization>, CVAGestaoLayout.CVAGestaoService.IAuthorization {
        
        public AuthorizationClient() {
        }
        
        public AuthorizationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorizationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MODEL.Classes.AuthorizedDayModel[] Get_DiasAutorizados(int idCol) {
            return base.Channel.Get_DiasAutorizados(idCol);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.AuthorizedDayModel[]> Get_DiasAutorizadosAsync(int idCol) {
            return base.Channel.Get_DiasAutorizadosAsync(idCol);
        }
        
        public MODEL.Classes.MessageModel AddDiaAutorizado(MODEL.Classes.AuthorizedDayModel model) {
            return base.Channel.AddDiaAutorizado(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> AddDiaAutorizadoAsync(MODEL.Classes.AuthorizedDayModel model) {
            return base.Channel.AddDiaAutorizadoAsync(model);
        }
        
        public MODEL.Classes.MessageModel RemoveDiaAutorizado(int id) {
            return base.Channel.RemoveDiaAutorizado(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> RemoveDiaAutorizadoAsync(int id) {
            return base.Channel.RemoveDiaAutorizadoAsync(id);
        }
        
        public MODEL.Classes.AuthorizedHoursModel[] Get_HorasAutorizadas(int idCol) {
            return base.Channel.Get_HorasAutorizadas(idCol);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.AuthorizedHoursModel[]> Get_HorasAutorizadasAsync(int idCol) {
            return base.Channel.Get_HorasAutorizadasAsync(idCol);
        }
        
        public MODEL.Classes.MessageModel AddHorasAutorizadas(MODEL.Classes.AuthorizedHoursModel model) {
            return base.Channel.AddHorasAutorizadas(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> AddHorasAutorizadasAsync(MODEL.Classes.AuthorizedHoursModel model) {
            return base.Channel.AddHorasAutorizadasAsync(model);
        }
        
        public MODEL.Classes.MessageModel RemoveHorasAutorizadas(int id) {
            return base.Channel.RemoveHorasAutorizadas(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> RemoveHorasAutorizadasAsync(int id) {
            return base.Channel.RemoveHorasAutorizadasAsync(id);
        }
        
        public MODEL.Classes.HoursLimitModel[] Get_LimiteHoras(int idCol) {
            return base.Channel.Get_LimiteHoras(idCol);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.HoursLimitModel[]> Get_LimiteHorasAsync(int idCol) {
            return base.Channel.Get_LimiteHorasAsync(idCol);
        }
        
        public MODEL.Classes.MessageModel AddLimiteHoras(MODEL.Classes.HoursLimitModel model) {
            return base.Channel.AddLimiteHoras(model);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> AddLimiteHorasAsync(MODEL.Classes.HoursLimitModel model) {
            return base.Channel.AddLimiteHorasAsync(model);
        }
        
        public MODEL.Classes.MessageModel RemoveLimiteHoras(int id) {
            return base.Channel.RemoveLimiteHoras(id);
        }
        
        public System.Threading.Tasks.Task<MODEL.Classes.MessageModel> RemoveLimiteHorasAsync(int id) {
            return base.Channel.RemoveLimiteHorasAsync(id);
        }
    }
}
