
@model CVA.Portal.Producao.Model.ReposicaoInsumoModel
@{
    ViewBag.Title = "REPOSIÇÃO DE INSUMOS";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //Layout = "~/Views/Apetit/_Layout.cshtml";
}


@if (ViewBag.Error != null)
{
    <div id="AlertError" class="col-md-12 col-sm-12 col-xs-12 form-group" onclick="$(this).fadeOut(250)">
        <div id="ErrorMsg" class="alert alert-error" style="white-space: pre-line; margin-bottom: 0px;">@ViewBag.Error</div>
    </div>
}
@if (ViewBag.Success != null)
{
    <div id="AlertSuccess" class="col-md-12 col-sm-12 col-xs-12 form-group" onclick="$(this).fadeOut(250)">
        <div id="SuccessMsg" class="alert alert-success" style="margin-bottom: 0px;">@ViewBag.Success</div>
    </div>
}

@using (Html.BeginForm("Create", "ReposicaoInsumos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        <div class="row">
            <div class="x_panel">

                <button type="button" class="btn btn-default pull-right" onclick="ClickModelAdd()">Novo <span class="fa fa-calendar-plus-o fa-right"></span></button>
                <button type="button" class="btn btn-dark pull-right" onclick="refresh()">Atualizar <span class="fa fa-refresh fa-right"></span></button>

                <div class="x_title">
                    <h2>@ViewBag.Title</h2>
                    <div class="clearfix"></div>
                </div>

                <div class="x_content">
                    <input type="hidden" value="@Model.Itens.Count" id="countList" />



                    @if (Model.InsumoList == null)
                    {
                        Model.InsumoList = new SelectList(new[] { new SelectListItem { Value = "", Text = "" } }, "Value", "Text");
                    }

                    @if (Model.BPLIdList == null)
                    {
                        Model.BPLIdList = new SelectList(new[] { new SelectListItem { Value = "", Text = "" } }, "Value", "Text");
                    }

                    @if (Model.MotivoList == null)
                    {
                        Model.MotivoList = new SelectList(new[] { new SelectListItem { Value = "", Text = "" } }, "Value", "Text");
                    }

                    
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BPLIdCode, new { @class = "control-label col-md-2", @style = "padding-top: 2px; height: 30px;" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    @Html.DropDownList("BPLIdCode", Model.BPLIdList, htmlAttributes: new { required = "required", id = "BPLIdCode", type = "number", @class = "chosen-select", data_placeholder = "Selecione uma filial" })
                                </div>
                            </div>

                            @Html.LabelFor(model => model.ClienteCode, new { @class = "control-label col-md-2", @style = "padding-top: 2px; height: 30px;" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    @Html.EditorFor(model => model.ClienteName, new { htmlAttributes = new { id = "txtClienteName", @style = "padding-top: 2px; height: 30px;", @class = "form-control", disabled = "disabled" } })
                                </div>
                            </div>

                            @Html.LabelFor(model => model.MotivoCode, new { @class = "control-label col-md-2", @style = "padding-top: 2px; height: 30px;" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    @Html.DropDownList("MotivoCode", Model.MotivoList, htmlAttributes: new { required = "required", id = "MotivoCode", type = "number", @class = "chosen-select", data_placeholder = "Selecione um motivo" })
                                </div>
                            </div>

                            @Html.LabelFor(model => model.observacao, new { @class = "control-label col-md-2", @style = "padding-top: 2px; height: 30px;" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    @Html.EditorFor(model => model.observacao, new { htmlAttributes = new { id = "observacao", @style = "padding-top: 2px; height: 30px;", @class = "form-control" } })
                                </div>
                            </div>

                            @Html.LabelFor(model => model.Anexo, new { @class = "control-label col-md-2", @style = "padding-top: 2px; height: 30px;" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    <input type="file" name="Anexo" accept=".pdf, .PDF, .xls, .XLS, .jpeg, .JPEG" class="form-control" multiple />
                                </div>
                            </div>

                        </div>

                        @Html.HiddenFor(model => model.ClienteCode)
                        @Html.HiddenFor(model => model.ClienteName)

                        <div class="clearfix"></div>
                    </div>
                    <table id="dtInsumo" class="table table-striped table-bordered" style="width: 100%">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Itens.First().InsumoCode)</th>
                                <th>@Html.DisplayNameFor(model => model.Itens.First().InsumoName)</th>
                                <th>@Html.DisplayNameFor(model => model.Itens.First().Qty)</th>
                                <th>@Html.DisplayNameFor(model => model.Itens.First().DtNecessidade)</th>

                                <th style="width: 10%;"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.Itens.Count; i++)
                            {
                                <tr id="tr-@i">
                                    <td>@Model.Itens[i].InsumoCode</td>
                                    <td>@Model.Itens[i].InsumoName</td>
                                    <td>@Model.Itens[i].Qty</td>
                                    <td>@Model.Itens[i].DtNecessidade</td>
                                    <td style="text-align: center">
                                        @Html.HiddenFor(m => m.Itens[i].InsumoCode)
                                        @Html.HiddenFor(m => m.Itens[i].InsumoName)
                                        @Html.HiddenFor(m => m.Itens[i].Qty)
                                        @Html.HiddenFor(m => m.Itens[i].DtNecessidade)
                                        @Html.HiddenFor(m => m.Itens[i].Delete)
                                        <button type="button" class="btn btn-default btn-small no-margin" onclick="modalItem('edit',@i)">
                                            <span class="fa fa-pencil"></span>
                                        </button>
                                        <button type="button" class="btn btn-default btn-small no-margin" onclick="modalItem('delete',@i)">
                                            <span class="fa fa-trash"></span>
                                        </button>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>



                <button type="button" class="btn btn-default pull-left" onclick="location.href='@Url.Action("Menu", "Apetit")'"><span class="fa fa-reply fa-right"></span> Voltar</button>
                <button type="button" class="btn btn-primary pull-right" onclick="loadingOn(); submit();"><span class="fa fa-plus fa-right"></span> Enviar Solicitação</button>
            </div>

        </div>
    </div>
}


@Html.Partial("modalCreate")
@Html.Partial("modalEdit")
@Html.Partial("modalDelete")



@section Scripts{
    <script src="~/Scripts/Views/ReposicaoInsumos/index.js"></script>
}
