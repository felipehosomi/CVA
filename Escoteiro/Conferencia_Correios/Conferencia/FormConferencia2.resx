<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_vol.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABcAAAAWCAYAAAArdgcFAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABKNJREFUSEuVVWtMk1cY7pJNdIsYjTIol16g5VIEUgoiZplc4obOhGJ0A0aFKmCy
        bGKWCZjIL8Q5hygixpltjI3LZrIF3YiZs4Rl4LZgcYmTy0YGRkmoYWsLRQotz95zvu8rTOTHnqT5zjnv
        +z3fe573OacyrICFhQVx9P/h9XoxOTmJFckldHR0oOydwzhWUYnKigqUHy3HqZMnMTPjEjMWIRVks9ko
        PrMyuZRYQ0QhQUHYHB2D2KhoREVokPHydtjtdh6XwPLZb2JighMzLCNnCV7voiQN9ecRqY7AVkMSUhKT
        YIhLQPau3Zibc/O4VAR7Pnpkw+OZx3zOpFlG7qFFlm6bsOH2L7+iqrwScdGxRJyCFEMKDPEG7NyRBcsP
        N3Gn/w5/Z3R0lD99IIIFzxPkUhUMXgqWv3cU69f6Y4s+iSon8sQt/Bkepkb85jjMz82j56ceBAfKERYS
        ynvT09ND63Ocw0fudgvbZCgsMGFPzh4+PlNbC2WIgj6QjNSkrYhQhGOfcS+PMUw5nFzjK19dQenBEv4R
        9v6UcwqypdUODg4iMT4BqaTtyMiIuAo0NzVDKQ+DVqWBcVc2X6s7U4cPPzjNLSdhiN4PDHgRFxsa+dxH
        /mVbO0mwDsX7C/mcoaa6GkZjDh83NlxAfm4eHzMbftH8OYoPHIRKocTre/eh6dMmRGkicZ4MwDDvnhdk
        qao6jlB5ML7tuMoDXo8HOdlGxMboMPbXKDlD0JCBuWD84bg4A5xOJ+rP1WP1Kj9owyPEVbGhLHiotBTR
        2kgUkVa3enuhi4pBBR0WDtGWli4Luru7MT4+DpfLBS81k6GddqxWqnDhfAM1tAxrn38BlpsWbg5fQ8fu
        38dbxSV4RiZDiDwEba1tYkRAY2MjTPtN4kyA2WyGMjQMN76/Ia4I50JGHNbbVsjYNhl+7OoiV4Tia+o6
        S85IS0cQNcdcWASr1YrLH11G7elanjswMAiDXg8jSed2L0rW2tqKgI2buIWZtLxyi6WLf82Umw+n3cET
        GYaH/8CxygpsS06FVqnBAZMZnde+Q7wuAVXHq8QsAUfI48FUTFtLq7giusU1PY1LFy/RSYyBLjIKOeQQ
        a1+fmCLgz6FhZGW+CmWwAuaCInEVePDgIdLT07Bx/Qa0kIMYPPMeeFjlS33OwC6lvDdyEa5ScwfVnKih
        Y96PI2+XcZ+n0glNe2k7kukstFNfgoPkXAYDnY9msiMHcS42VJCdduBCjEaLe/cGYP/Hji6LBZnpGVjz
        rB9itTpc++Yq9LF6OP524N3DZfBfvQafffwJ7cQEjUKF4cEhgUisVyAXJ9PTU9CRNO9TtQ7HovZS3Npv
        hUod7mvi73fvQh2mwM5XsvicYYFZ9z/kImZnZ/lWU/SJCNwUgMI3Tbje2SlGgT7qQ6RWw8dn6+rg99wq
        nKs7y+dPg09zdvmwfxAGdomxqg6VlEIeGAQtXVanqk/gOjllG93rWZk7oCDb/iZeuQySpZeCV86I2T8I
        w5MNZmhraUH2a7sRSs3b4L8OBXn5/NZj8MmwnBsyqWJGyr4ukbMns9NSjI2NovfnW+IMmCPt2b3/dHLg
        XxveSvZJUDj+AAAAAElFTkSuQmCC
</value>
  </data>
</root>